///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        08/Dec/2018  14:56:59 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\Source\PM /
//                          25.c                                              /
//    Command line       =  -f C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä× /
//                          é²¥+PM25\Projects\zstack\Samples\SampleApp\CC2530 /
//                          DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg           /
//                          (-DCPU32MHZ -DROOT=__near_func                    /
//                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6        /
//                          -DMAC_CFG_RX_MAX=3) -f C:\Users\77564\Desktop\¼à² /
//                          âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥+PM25\Projects\zstack\Samp /
//                          les\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8 /
//                          wConfig.cfg (-DZIGBEEPRO -DSECURE=0               /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFF00                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\Users\77564\Desktop\¼à² /
//                          âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥+PM25\Projects\zstack\Samp /
//                          les\SampleApp\Source\PM25.c -D NWK_AUTO_POLL -D   /
//                          ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D             /
//                          MT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D HAL_ADC    /
//                          -D Channel_0_For_TGS822 -D Channel_1_For_TGS813   /
//                          -D "HAL_UART= TRUE" -lC                           /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          EndDeviceEB\List\ -lA C:\Users\77564\Desktop\¼à²â /
//                          ÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥+PM25\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\EndDeviceEB\List\           /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          EndDeviceEB\Obj\ -e --no_code_motion --debug      /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                           -I C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä /
//                          ×é²¥+PM25\Projects\zstack\Samples\SampleApp\CC253 /
//                          0DB\..\Source\ -I C:\Users\77564\Desktop\¼à²âÈÕ¼Ç /
//                          \¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥+PM25\Projects\zstack\Samples\S /
//                          ampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\ -I     /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\hal\include\ -I         /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\hal\target\CC2530EB\    /
//                          -I C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä× /
//                          é²¥+PM25\Projects\zstack\Samples\SampleApp\CC2530 /
//                          DB\..\..\..\..\..\Components\mac\include\ -I      /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\mac\high_level\ -I      /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\mac\low_level\srf04\    /
//                          -I C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä× /
//                          é²¥+PM25\Projects\zstack\Samples\SampleApp\CC2530 /
//                          DB\..\..\..\..\..\Components\mac\low_level\srf04\ /
//                          single_chip\ -I C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ /
//                          ÄÕýµÄ³ÌÐò\¸Ä×é²¥+PM25\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\mt\ -I  /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\osal\include\ -I        /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\services\saddr\ -I      /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\services\sdata\ -I      /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\stack\af\ -I            /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\stack\nwk\ -I           /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\stack\sapi\ -I          /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\stack\sec\ -I           /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\stack\sys\ -I           /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\stack\zdo\ -I           /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\zmac\ -I                /
//                          C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          ..\..\..\..\..\Components\zmac\f8w\ -Ohz          /
//    List file          =  C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥ /
//                          +PM25\Projects\zstack\Samples\SampleApp\CC2530DB\ /
//                          EndDeviceEB\List\PM25.s51                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME PM25

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?INTERRUPT_ENTER_XSP
        EXTERN ?INTERRUPT_LEAVE_XSP
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN __INIT_XDATA_Z

        PUBLIC ??DelayMS?relay
        FUNCTION ??DelayMS?relay,0203H
        PUBLIC ??InitUart?relay
        FUNCTION ??InitUart?relay,0203H
        PUBWEAK `??UART0_ISR??INTVEC 19`
        PUBLIC ??UartSendString?relay
        FUNCTION ??UartSendString?relay,0203H
        PUBLIC DelayMS
        FUNCTION DelayMS,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC InitUart
        FUNCTION InitUart,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBWEAK P0SEL
        PUBWEAK P2DIR
        PUBWEAK PERCFG
        PUBLIC RxBuf
        PUBLIC RxData
        PUBWEAK U0BAUD
        PUBWEAK U0CSR
        PUBWEAK U0DBUF
        PUBWEAK U0GCR
        PUBLIC UART0_ISR
        FUNCTION UART0_ISR,021233H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC UartSendString
        FUNCTION UartSendString,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC UartState
        PUBWEAK _A_IEN0
        PUBWEAK _A_IRCON2
        PUBWEAK _A_TCON
        PUBLIC count1
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
memset              SYMBOL "memset"
??memset?relay      SYMBOL "?relay", memset
DelayMS             SYMBOL "DelayMS"
??DelayMS?relay     SYMBOL "?relay", DelayMS
InitUart            SYMBOL "InitUart"
??InitUart?relay    SYMBOL "?relay", InitUart
UART0_ISR           SYMBOL "UART0_ISR"
`??UART0_ISR??INTVEC 19` SYMBOL "??INTVEC 19", UART0_ISR
UartSendString      SYMBOL "UartSendString"
??UartSendString?relay SYMBOL "?relay", UartSendString

        EXTERN memset
        FUNCTION memset,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??memset?relay
        FUNCTION ??memset?relay,00H

// C:\Users\77564\Desktop\¼à²âÈÕ¼Ç\¸ÄÕýµÄ³ÌÐò\¸Ä×é²¥+PM25\Projects\zstack\Samples\SampleApp\Source\PM25.c
//    1 /****************************************************************************
//    2 * ÎÄ ¼þ Ãû: PM25.c
//    3 * ×÷    Õß: È¨
//    4 * ÐÞ    ¶©: 2013-01-08
//    5 * °æ    ±¾: ¼Ä´æÆ÷°æ±¾£¬ÔÚÊµ¼ÊµÄÐ­ÒéÕ»ÖÐÊ¹ÓÃµÄÊÇ¿âº¯Êý£¬´ËÍ·ÎÄ¼þÌá¹©±äÁ¿ÉèÖÃ1.0
//    6 * Ãè    Êö: ÉèÖÃ´®¿Ú²¨ÌØÂÊ£º9600bps 8N1
//    7 *           ´®¿Ú½ÓÊÕµ½PM25´«¸ÐÆ÷·µ»ØµÄÊý¾Ý£¬Í¨¹ý½âÎö»ñµÃPM25Êý¾Ý
//    8 ****************************************************************************/
//    9 #include <ioCC2530.h>

        ASEGN SFR_AN:DATA:NOROOT,086H
// unsigned char volatile __sfr U0CSR
U0CSR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,088H
// union <unnamed> volatile __sfr _A_TCON
_A_TCON:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c1H
// unsigned char volatile __sfr U0DBUF
U0DBUF:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c2H
// unsigned char volatile __sfr U0BAUD
U0BAUD:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c5H
// unsigned char volatile __sfr U0GCR
U0GCR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e8H
// union <unnamed> volatile __sfr _A_IRCON2
_A_IRCON2:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f1H
// unsigned char volatile __sfr PERCFG
PERCFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0ffH
// unsigned char volatile __sfr P2DIR
P2DIR:
        DATA8
        DS 1
//   10 #include <string.h>
//   11 #include <stdio.h>
//   12 #include <PM25.h>

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   13 uchar count1;
count1:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   14 uchar RxBuf;
RxBuf:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   15 char UartState;
UartState:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   16 char RxData[SIZE];        //´æ´¢·¢ËÍ×Ö·û´®
RxData:
        DS 51
        REQUIRE __INIT_XDATA_Z
//   17 
//   18 
//   19 
//   20 
//   21 /****************************************************************************
//   22 * Ãû    ³Æ: DelayMS()
//   23 * ¹¦    ÄÜ: ÒÔºÁÃëÎªµ¥Î»ÑÓÊ±
//   24 * Èë¿Ú²ÎÊý: msec ÑÓÊ±²ÎÊý£¬ÖµÔ½´ó£¬ÑÓÊ±Ô½¾Ã
//   25 * ³ö¿Ú²ÎÊý: ÎÞ
//   26 ****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   27 void DelayMS(uint msec)
DelayMS:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function DelayMS
        CODE
//   28 { 
        ; Saved register size: 0
        ; Auto size: 0
//   29     uint i,j;
//   30     
//   31     for (i=0; i<msec; i++)
        MOV     R0,#0x0
        MOV     R1,#0x0
        SJMP    ??DelayMS_0
//   32         for (j=0; j<1070; j++);
??DelayMS_1:
        MOV     A,R0
        ADD     A,#0x1
        INC     R0
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
??DelayMS_0:
        CLR     C
        MOV     A,R0
        SUBB    A,R2
        MOV     A,R1
        SUBB    A,R3
        JC      ??DelayMS_1
//   33 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
//   34 
//   35 /****************************************************************************
//   36 * Ãû    ³Æ: InitUart()
//   37 * ¹¦    ÄÜ: ´®¿Ú³õÊ¼»¯º¯Êý
//   38 * Èë¿Ú²ÎÊý: ÎÞ
//   39 * ³ö¿Ú²ÎÊý: ÎÞ
//   40 ****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   41 void InitUart(void)
InitUart:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function InitUart
        CODE
//   42 { 
        ; Saved register size: 0
        ; Auto size: 0
//   43     PERCFG = 0x00;           //ÍâÉè¿ØÖÆ¼Ä´æÆ÷ USART 0µÄIOÎ»ÖÃ:0ÎªP0¿ÚÎ»ÖÃ1 
        MOV     0xf1,#0x0
//   44     P0SEL = 0x0c;            //P0_2,P0_3ÓÃ×÷´®¿Ú£¨ÍâÉè¹¦ÄÜ£©
        MOV     0xf3,#0xc
//   45     P2DIR &= ~0xC0;          //P0ÓÅÏÈ×÷ÎªUART0
        ANL     0xff,#0x3f
//   46     
//   47     U0CSR |= 0x80;           //ÉèÖÃÎªUART·½Ê½
        ORL     0x86,#0x80
//   48     U0GCR |= 8;				       
        ORL     0xc5,#0x8
//   49     U0BAUD |= 59;           //²¨ÌØÂÊÉèÎª9600
        ORL     0xc2,#0x3b
//   50     UTX0IF = 0;              //UART0 TXÖÐ¶Ï±êÖ¾³õÊ¼ÖÃÎ»0
        CLR     0xe8.1
//   51     U0CSR |= 0x40;           //ÔÊÐí½ÓÊÕ 
        ORL     0x86,#0x40
//   52     IEN0 |= 0x84;            //¿ª×ÜÖÐ¶ÏÔÊÐí½ÓÊÕÖÐ¶Ï  
        ORL     0xa8,#0x84
//   53 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
        REQUIRE PERCFG
        REQUIRE P0SEL
        REQUIRE P2DIR
        REQUIRE U0CSR
        REQUIRE U0GCR
        REQUIRE U0BAUD
        REQUIRE _A_IRCON2
        REQUIRE _A_IEN0
//   54 
//   55 /****************************************************************************
//   56 * Ãû    ³Æ: UartSendString()
//   57 * ¹¦    ÄÜ: ´®¿Ú·¢ËÍº¯Êý
//   58 * Èë¿Ú²ÎÊý: Data:·¢ËÍ»º³åÇø   len:·¢ËÍ³¤¶È
//   59 * ³ö¿Ú²ÎÊý: ÎÞ
//   60 ****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   61 void UartSendString(char *Data, int len)
UartSendString:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function UartSendString
        CODE
//   62 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   63     uint i;
//   64     
//   65     for(i=0; i<len; i++)
        MOV     R0,#0x0
        MOV     R1,#0x0
        SJMP    ??UartSendString_0
//   66     {
//   67         U0DBUF = *Data++;
??UartSendString_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     0xc1,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
//   68         while(UTX0IF == 0);
??UartSendString_2:
        MOV     C,0xe8.1
        JNC     ??UartSendString_2
//   69         UTX0IF = 0;
        CLR     0xe8.1
//   70     }
        MOV     A,R0
        ADD     A,#0x1
        INC     R0
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
??UartSendString_0:
        CLR     C
        MOV     A,R0
        SUBB    A,R4
        MOV     A,R1
        SUBB    A,R5
        JC      ??UartSendString_1
//   71 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
        REQUIRE U0DBUF
        REQUIRE _A_IRCON2
//   72 
//   73 
//   74 /****************************************************************************
//   75 * Ãû    ³Æ: UART0_ISR(void) ´®¿ÚÖÐ¶Ï´¦Àíº¯Êý 
//   76 * Ãè    Êö: µ±´®¿Ú0²úÉú½ÓÊÕÖÐ¶Ï£¬½«ÊÕµ½µÄÊý¾Ý±£´æÔÚRxBufÖÐ
//   77 ****************************************************************************/
//   78 #pragma vector = URX0_VECTOR 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   79 __interrupt void UART0_ISR(void) 
UART0_ISR:
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function UART0_ISR
        CODE
//   80 { 
        FUNCALL UART0_ISR, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0xf
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
//   81     URX0IF = 0;       // ÇåÖÐ¶Ï±êÖ¾ 
        CLR     0x88.3
//   82     RxBuf = U0DBUF; 
        MOV     A,0xc1
        MOV     DPTR,#RxBuf
        MOVX    @DPTR,A
//   83     if(UartState == UART0_RX)              //½ÓÊÕ×´Ì¬ 
        MOV     DPTR,#UartState
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??UART0_ISR_0
//   84         {  
//   85                 
//   86                 if((RxBuf != 0xAB)&&(count1 < 10))//ÒÔ'AB'Îª½áÊø·û,Ò»´Î×î¶à½ÓÊÕ50¸ö×Ö·û            
        MOV     DPTR,#RxBuf
        MOVX    A,@DPTR
        XRL     A,#0xab
        JZ      ??UART0_ISR_1
        MOV     DPTR,#count1
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0xa
        JNC     ??UART0_ISR_1
//   87                 {
//   88                   RxData[count1++] = RxBuf;
        MOV     DPTR,#RxBuf
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-4
        MOV     DPTR,#count1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#RxData & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(RxData >> 8) & 0xff
        ADDC    A,#0x0
        MOV     DPH,A
        POP     A
        CFI CFA_SP SP+-3
        MOVX    @DPTR,A
        MOV     DPTR,#count1
        MOVX    A,@DPTR
        INC     A
        SJMP    ??UART0_ISR_2
//   89                 }
//   90                 else
//   91                 {
//   92                     if(count1 >= 10)             //ÅÐ¶ÏÊý¾ÝºÏ·¨ÐÔ£¬·ÀÖ¹Òç³ö
??UART0_ISR_1:
        MOV     DPTR,#count1
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0xa
        JC      ??UART0_ISR_3
//   93                     {
//   94                         count1 = 0;              //¼ÆÊýÇå0
        CLR     A
        MOVX    @DPTR,A
//   95                         UartState = UART0_TX;
        MOV     DPTR,#UartState
        MOV     A,#0x2
        MOVX    @DPTR,A
//   96                         memset(RxData, 0, SIZE);//Çå¿Õ½ÓÊÕ»º³åÇø
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#0x33
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 17)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#RxData & 0xff
        MOV     R3,#(RxData >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 15)
        SJMP    ??UART0_ISR_0
//   97                     }
//   98                     else
//   99                         UartState = UART0_TX;  //½øÈë·¢ËÍ×´Ì¬ 
??UART0_ISR_3:
        MOV     DPTR,#UartState
        MOV     A,#0x2
??UART0_ISR_2:
        MOVX    @DPTR,A
//  100                 }
//  101         }
//  102 }
??UART0_ISR_0:
        MOV     R7,#0x2
        LJMP    ?INTERRUPT_LEAVE_XSP
        CFI EndBlock cfiBlock3
        REQUIRE _A_TCON
        REQUIRE U0DBUF

        COMMON INTVEC:CODE:ROOT(0)
        ORG 19
`??UART0_ISR??INTVEC 19`:
        LJMP       (UART0_ISR)

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??DelayMS?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    DelayMS

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??InitUart?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    InitUart

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??UartSendString?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    UartSendString

        END
// 
// 102 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
//   3 bytes in segment INTVEC
// 129 bytes in segment NEAR_CODE
//  10 bytes in segment SFR_AN
//  54 bytes in segment XDATA_Z
// 
// 249 bytes of CODE  memory (+  3 bytes shared)
//   0 bytes of DATA  memory (+ 10 bytes shared)
//  54 bytes of XDATA memory
//
//Errors: none
//Warnings: none
