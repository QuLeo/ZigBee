###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         09/Dec/2017  14:27:16 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\Source\TGS813.c   #
#    Command line       =  -f C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä #
#                          1\Projects\zstack\Samples\SampleApp\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ        #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä #
#                          1\Projects\zstack\Samples\SampleApp\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF00                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 C:\Users\77564\Desktop\TENZ #
#                          ×é²¥+PM25+CO+HCL£º¸Ä1\Projects\zstack\Samples\Samp #
#                          leApp\Source\TGS813.c -D ZTOOL_P1 -D MT_TASK -D    #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                      #
#                          xLCD_SUPPORTED=DEBUG -D Channel_0_For_TGS822 -D    #
#                          Channel_1_For_TGS813 -lC                           #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\Coordina #
#                          torEB\List\ -lA C:\Users\77564\Desktop\TENZ×é²¥+PM #
#                          25+CO+HCL£º¸Ä1\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\CoordinatorEB\List\ --diag_suppress        #
#                          Pe001,Pa010 -o C:\Users\77564\Desktop\TENZ×é²¥+PM2 #
#                          5+CO+HCL£º¸Ä1\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\CoordinatorEB\Obj\ -e --no_code_motion      #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä #
#                          1\Projects\zstack\Samples\SampleApp\CC2530DB\ -I   #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\Sourc #
#                          e\ -I C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£ #
#                          º¸Ä1\Projects\zstack\Samples\SampleApp\CC2530DB\.. #
#                          \..\..\ZMain\TI2530DB\ -I                          #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\hal\include\ -I                  #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\hal\target\CC2530EB\ -I          #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\include\ -I                  #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\low_level\srf04\ -I          #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\low_level\srf04\single_chip\ #
#                           -I C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸ #
#                          Ä1\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mt\ -I                       #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\osal\include\ -I                 #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\services\saddr\ -I               #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\services\sdata\ -I               #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\af\ -I                     #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\nwk\ -I                    #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\sapi\ -I                   #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\sec\ -I                    #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\sys\ -I                    #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\zdo\ -I                    #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\zmac\ -I                         #
#                          C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. #
#                          \..\..\Components\zmac\f8w\ -Ohz                   #
#    List file          =  C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\Coordina #
#                          torEB\List\TGS813.lst                              #
#    Object file        =  C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\P #
#                          rojects\zstack\Samples\SampleApp\CC2530DB\Coordina #
#                          torEB\Obj\TGS813.r51                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\77564\Desktop\TENZ×é²¥+PM25+CO+HCL£º¸Ä1\Projects\zstack\Samples\SampleApp\Source\TGS813.c
      1          /**************************************
      2          * Íø¿×·¨ Çø¼äÖ±Ïß·¨
      3          * »ñÈ¡TGSÏµÁÐ´«¸ÐÆ÷µÄÊý¾Ý
      4          **************************************/
      5          #include "TGS813.h"
      6          
      7          #if (defined Channel_0_For_TGS813) || (defined Channel_1_For_TGS813)   //±ØÐëºê¶¨ÒåÁËTGS813µÄÍ¨µÀ²Å±àÒëÏÂÃæµÄ³ÌÐò
      8          
      9          //¼ÇÂ¼figure2ÖÐÎÂÊª¶ÈÊý¾Ý

   \                                 In  segment XDATA_I, align 1, keep-with-next
     10          int TGS813GasSen_T[]={-10,0,10,20,30,40};
   \                     TGS813GasSen_T:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for TGS813GasSen_T>`
   \   00000C                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
     11          char TGS813GasSen_R[]={0,20,40,65,100};
   \                     TGS813GasSen_R:
   \   000000                DS 5
   \   000005                REQUIRE `?<Initializer for TGS813GasSen_R>`
   \   000005                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     12          unsigned char TGS813GasSen_Flag=0;
   \                     TGS813GasSen_Flag:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     13          //Methane ¼×ÍéÔÚfigure1ÖÐµÄ½»µã×ø±ê

   \                                 In  segment XDATA_I, align 1, keep-with-next
     14          float TGS813Fig1Data[][2]=
   \                     TGS813Fig1Data:
   \   000000                DS 152
   \   000098                REQUIRE `?<Initializer for TGS813Fig1Data>`
   \   000098                REQUIRE __INIT_XDATA_I
     15          {
     16          	{500,1.5f},
     17          	{600,1.4f},
     18          	{700,1.3f},
     19          	{800,1.2f},
     20          	{900,1.1f},
     21          	{1000,1.0f},
     22          	{1300,0.9f},
     23          	{1700,0.8f},
     24          	{2000,0.73f},
     25          	{2100,0.7f},
     26          	{3000,0.6f},
     27          	{4000,0.53f},
     28          	{4400,0.5f},
     29          	{5000,0.47f},
     30          	{6000,0.43f},
     31          	{7000,0.41f},
     32          	{8000,0.38f},
     33          	{9000,0.36f},
     34          	{10000,0.35f},
     35          };
     36          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     37          float TGS813Fig2Data[TGS813GasSen_R_Leghth][TGS813GasSen_T_Leghth][2]=
   \                     TGS813Fig2Data:
   \   000000                DS 240
   \   0000F0                REQUIRE `?<Initializer for TGS813Fig2Data>`
   \   0000F0                REQUIRE __INIT_XDATA_I
     38          {
     39          	//0% RH
     40          	{
     41          		{-10,1.87f},{0,1.79f},{10,1.74f},{20,1.68f},{30,1.65f},{40,1.61f},
     42          	},
     43          	//20% RH
     44          	{
     45          		{-10,1.73f},{0,1.52f},{10,1.35f},{20,1.21f},{30,1.12f},{40,1.07f},
     46          	},
     47          	//40% RH
     48          	{
     49          		{-10,1.68f},{0,1.45f},{10,1.25f},{20,1.1f},{30,0.98f},{40,0.92f},
     50          	},
     51          	//65% RH
     52          	{
     53          		{-10,1.61f},{0,1.35f},{10,1.15f},{20,1.0f},{30,0.9f},{40,0.86f},
     54          	},
     55          	//100% RH
     56          	{
     57          		{-10,1.55f},{0,1.3f},{10,1.1f},{20,0.96f},{30,0.86f},{40,0.83f},
     58          	},
     59          };
     60          //²ÎÊý£ºRLµç×èÉÏµÄµçÑ¹Öµ DHT11ÎÂÊª¶È
     61          //·µ»¹£ºÅ¨¶ÈÖµ£¬500-10000ppmÖ®¼ä
     62          //×¢Òâ£ºTGS813Ö»ÄÜ²âÁ¿500-10000ppmÅ¨¶ÈµÄ¼×Íé
     63          //	µ±Å¨¶È¸ßÓÚ10000ppmm,TGS813GasSen_FlagµÄÎ»0±»ÖÃ1;
     64          //	µ±Å¨¶ÈµÍÓÚ500ppm,TGS813GasSen_FlagµÄÎ»1±»ÖÃ1;

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     65          int TGS813GetConcentration(float RL_Vol,char DHT11_T,unsigned char DHT11_R)
   \                     TGS813GetConcentration:
     66          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   85..82       MOV     DPL,?XSP + 0
   \   00000E   85..83       MOV     DPH,?XSP + 1
   \   000011   F0           MOVX    @DPTR,A
   \   000012   8A..         MOV     ?V0 + 4,R2
   \   000014   8B..         MOV     ?V0 + 5,R3
   \   000016   8C..         MOV     ?V0 + 6,R4
   \   000018   8D..         MOV     ?V0 + 7,R5
   \   00001A   7421         MOV     A,#0x21
   \   00001C   12....       LCALL   ?XSTACK_DISP0_8
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   FA           MOV     R2,A
     67          	float Rs=0;				
     68          	float RsR0_Ratio1=0;							//RsÓëR0µÄ±ÈÂÊ1,±ÈÂÊ1ÓÃÓÚ×îÖÕ¼ÆËãÅ¨¶È½á¹û
     69          	int concentration=0;							//×îºóµÄÅ¨¶ÈÖµ
     70          	char i=0;                                                               //Ñ­»·ÓÃµ½
     71                  TGS813GasSen_Flag = 0;                                                      //Çå¿Õ±êÖ¾Î»
   \   000021   90....       MOV     DPTR,#TGS813GasSen_Flag
   \   000024   E4           CLR     A
   \   000025   F0           MOVX    @DPTR,A
     72          
     73          	RL_Vol += (float)TGS813GasSen_Wire_Compensation;			//²¹³¥ÏßÂ·µÄÑ¹½µ,Õâ¸öµÃ²âÁ¿µ¼ÏßµÄÑ¹½µ
     74          	Rs = ((TGS813GasSen_Vc/RL_Vol)-1)*TGS813GasSen_RL;			//µÃ³öRsµÄÖµ
     75          	RsR0_Ratio1 = Rs / TGS813GetCookedRo(DHT11_T,DHT11_R);		        //µÃµ½±ÈÂÊ1,±ÈÂÊ1ÊÇÍ¨¹ýRsÓë²¹³¥ºóµÄR0µÄ±ÈÖµ»ñµÃµÄ¡£
   \   000026   75..F6       MOV     ?V0 + 0,#-0xa
   \   000029   75..28       MOV     ?V0 + 1,#0x28
   \   00002C   75..9C       MOV     ?V0 + 2,#-0x64
   \   00002F   75..40       MOV     ?V0 + 3,#0x40
   \   000032   90....       MOV     DPTR,#__Constant_bc23d70a
   \   000035   78..         MOV     R0,#?V0 + 8
   \   000037   12....       LCALL   ?L_MOV_X
   \   00003A   78..         MOV     R0,#?V0 + 4
   \   00003C   79..         MOV     R1,#?V0 + 8
   \   00003E   12....       LCALL   ?FLT_ADD
   \   000041   78..         MOV     R0,#?V0 + 0
   \   000043   79..         MOV     R1,#?V0 + 4
   \   000045   12....       LCALL   ?FLT_DIV
   \   000048   90....       MOV     DPTR,#__Constant_bf800000
   \   00004B   78..         MOV     R0,#?V0 + 4
   \   00004D   12....       LCALL   ?L_MOV_X
   \   000050   78..         MOV     R0,#?V0 + 0
   \   000052   79..         MOV     R1,#?V0 + 4
   \   000054   12....       LCALL   ?FLT_ADD
   \   000057                ; Setup parameters for call to function TGS813GetCookedRo
   \   000057   85..82       MOV     DPL,?XSP + 0
   \   00005A   85..83       MOV     DPH,?XSP + 1
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   F9           MOV     R1,A
   \   00005F   12....       LCALL   ??TGS813GetCookedRo?relay
   \   000062   8A..         MOV     ?V0 + 4,R2
   \   000064   8B..         MOV     ?V0 + 5,R3
   \   000066   8C..         MOV     ?V0 + 6,R4
   \   000068   8D..         MOV     ?V0 + 7,R5
   \   00006A   78..         MOV     R0,#?V0 + 0
   \   00006C   79..         MOV     R1,#?V0 + 4
   \   00006E   12....       LCALL   ?FLT_DIV
     76          
     77          
     78          //	printf("Rs:%f\n",Rs);							//Êä³öRs
     79          //	printf("Ratio:%f\n",RsR0_Ratio1);					//Êä³ö±ÈÂÊ
     80          //	RsR0_Ratio1 = 1.38;						        //Èí¼þÉè¶¨±ÈÂÊ£¬ÎªÁË²âÊÔ
     81          
     82          	//ÅÐ¶Ï±ÈÂÊ£¬ÒªÇó±ÈÂÊ¶ÔÓ¦µÄÅ¨¶ÈÖµÔÚ´«¸ÐÆ÷²âÁ¿µÄ·¶Î§Àï£¬Èô²»ÔÚ£¬ÖÃÎ»±êÖ¾Î»
     83          	if(RsR0_Ratio1 > TGS813Fig1Data[0][1])
   \   000071   90....       MOV     DPTR,#TGS813Fig1Data + 4
   \   000074   78..         MOV     R0,#?V0 + 4
   \   000076   12....       LCALL   ?L_MOV_X
   \   000079   78..         MOV     R0,#?V0 + 4
   \   00007B   79..         MOV     R1,#?V0 + 0
   \   00007D   12....       LCALL   ?FLT_LT
   \   000080   500E         JNC     ??TGS813GetConcentration_0
     84          	{
     85          		//Ä¿±êÆøÌåÔÚ0-500ppmÖ®¼ä£¬²»ÔÚ²âÊÔ·¶Î§·µ»¹0
     86          		TGS813GasSen_Flag |= (1<<0);
   \   000082   90....       MOV     DPTR,#TGS813GasSen_Flag
   \   000085   E0           MOVX    A,@DPTR
   \   000086   D2E0         SETB    0xE0 /* A   */.0
   \   000088   F0           MOVX    @DPTR,A
     87          		return 0;
   \   000089   7A00         MOV     R2,#0x0
   \   00008B   7B00         MOV     R3,#0x0
   \   00008D   02....       LJMP    ??TGS813GetConcentration_1 & 0xFFFF
     88          	}
     89          	else if(RsR0_Ratio1 < TGS813Fig1Data[TGS813NumOfFig1Coor-1][1])
   \                     ??TGS813GetConcentration_0:
   \   000090   90....       MOV     DPTR,#TGS813Fig1Data + 148
   \   000093   78..         MOV     R0,#?V0 + 4
   \   000095   12....       LCALL   ?L_MOV_X
   \   000098   78..         MOV     R0,#?V0 + 0
   \   00009A   79..         MOV     R1,#?V0 + 4
   \   00009C   12....       LCALL   ?FLT_LT
   \   00009F   5013         JNC     ??TGS813GetConcentration_2
     90          	{
     91          		//Ä¿±êÆøÌåÅ¨¶È´óÓÚ10000ppm£¬²»ÔÚ²âÊÔ·¶Î§£¬·µ»¹10000
     92          		TGS813GasSen_Flag |= (1<<1);
   \   0000A1   90....       MOV     DPTR,#TGS813GasSen_Flag
   \   0000A4   E0           MOVX    A,@DPTR
   \   0000A5   D2E1         SETB    0xE0 /* A   */.1
   \   0000A7   F0           MOVX    @DPTR,A
     93          		return (int)TGS813Fig1Data[TGS813NumOfFig1Coor-1][0];
   \   0000A8   90....       MOV     DPTR,#TGS813Fig1Data + 144
   \   0000AB   12....       LCALL   ?XLOAD_R2345
   \   0000AE   12....       LCALL   ?R2345_FLT_TO_L
   \   0000B1   02....       LJMP    ??TGS813GetConcentration_3 & 0xFFFF
     94          	}
     95          	//Ñ­»·£¬ÅÐ¶Ï±ÈÂÊËùÔÚµÄÇø¼ä£¬µÃµ½µÄiÖµÎªÇø¼ä£¨ÒÔ×ø±êÊý×éÐÎÊ½£©ÏÂ±ê
     96          	for(i=0;i<TGS813NumOfFig1Coor;i++)				
   \                     ??TGS813GetConcentration_2:
   \   0000B4   75..00       MOV     ?V0 + 6,#0x0
     97          	{	
     98          		if((RsR0_Ratio1 <= TGS813Fig1Data[i][1]) && (RsR0_Ratio1 >TGS813Fig1Data[i+1][1]))	
   \                     ??TGS813GetConcentration_4:
   \   0000B7   85....       MOV     ?V0 + 4,?V0 + 6
   \   0000BA   75..00       MOV     ?V0 + 5,#0x0
   \   0000BD   7403         MOV     A,#0x3
   \   0000BF   78..         MOV     R0,#?V0 + 4
   \   0000C1   12....       LCALL   ?S_SHL
   \   0000C4   74..         MOV     A,#(TGS813Fig1Data + 4) & 0xff
   \   0000C6   25..         ADD     A,?V0 + 4
   \   0000C8   F582         MOV     DPL,A
   \   0000CA   74..         MOV     A,#((TGS813Fig1Data + 4) >> 8) & 0xff
   \   0000CC   35..         ADDC    A,?V0 + 5
   \   0000CE   F583         MOV     DPH,A
   \   0000D0   78..         MOV     R0,#?V0 + 8
   \   0000D2   12....       LCALL   ?L_MOV_X
   \   0000D5   78..         MOV     R0,#?V0 + 8
   \   0000D7   79..         MOV     R1,#?V0 + 0
   \   0000D9   12....       LCALL   ?FLT_GE
   \   0000DC   5027         JNC     ??TGS813GetConcentration_5
   \   0000DE   85....       MOV     ?V0 + 4,?V0 + 6
   \   0000E1   75..00       MOV     ?V0 + 5,#0x0
   \   0000E4   7403         MOV     A,#0x3
   \   0000E6   78..         MOV     R0,#?V0 + 4
   \   0000E8   12....       LCALL   ?S_SHL
   \   0000EB   74..         MOV     A,#(TGS813Fig1Data + 12) & 0xff
   \   0000ED   25..         ADD     A,?V0 + 4
   \   0000EF   F582         MOV     DPL,A
   \   0000F1   74..         MOV     A,#((TGS813Fig1Data + 12) >> 8) & 0xff
   \   0000F3   35..         ADDC    A,?V0 + 5
   \   0000F5   F583         MOV     DPH,A
   \   0000F7   78..         MOV     R0,#?V0 + 8
   \   0000F9   12....       LCALL   ?L_MOV_X
   \   0000FC   78..         MOV     R0,#?V0 + 8
   \   0000FE   79..         MOV     R1,#?V0 + 0
   \   000100   12....       LCALL   ?FLT_LT
   \   000103   4009         JC      ??TGS813GetConcentration_6
     99          		break;
    100          	}
   \                     ??TGS813GetConcentration_5:
   \   000105   05..         INC     ?V0 + 6
   \   000107   E5..         MOV     A,?V0 + 6
   \   000109   C3           CLR     C
   \   00010A   9413         SUBB    A,#0x13
   \   00010C   40A9         JC      ??TGS813GetConcentration_4
    101          	//»ñµÃ±ÈÂÊ¶ÔÓ¦µÄÅ¨¶ÈÖµ
    102          	concentration = (int)GetXFromTwoPoint(TGS813Fig1Data[i][0],TGS813Fig1Data[i][1],TGS813Fig1Data[i+1][0],TGS813Fig1Data[i+1][1],RsR0_Ratio1);	
   \                     ??TGS813GetConcentration_6:
   \   00010E   75..00       MOV     ?V0 + 7,#0x0
   \   000111   7403         MOV     A,#0x3
   \   000113   78..         MOV     R0,#?V0 + 6
   \   000115   12....       LCALL   ?S_SHL
   \   000118   74..         MOV     A,#TGS813Fig1Data & 0xff
   \   00011A   25..         ADD     A,?V0 + 6
   \   00011C   F8           MOV     R0,A
   \   00011D   74..         MOV     A,#(TGS813Fig1Data >> 8) & 0xff
   \   00011F   35..         ADDC    A,?V0 + 7
   \   000121   F9           MOV     R1,A
   \   000122   E8           MOV     A,R0
   \   000123   FE           MOV     R6,A
   \   000124   E9           MOV     A,R1
   \   000125   FF           MOV     R7,A
   \   000126   EE           MOV     A,R6
   \   000127   240C         ADD     A,#0xc
   \   000129   F582         MOV     DPL,A
   \   00012B   EF           MOV     A,R7
   \   00012C   3400         ADDC    A,#0x0
   \   00012E   F583         MOV     DPH,A
   \   000130   12....       LCALL   ?XLOAD_R2345
   \   000133   7405         MOV     A,#0x5
   \   000135   12....       LCALL   ?XSTACK_DISP0_8
   \   000138   12....       LCALL   ?XSTORE_R2345
   \   00013B   8E82         MOV     DPL,R6
   \   00013D   8F83         MOV     DPH,R7
   \   00013F   A3           INC     DPTR
   \   000140   A3           INC     DPTR
   \   000141   A3           INC     DPTR
   \   000142   A3           INC     DPTR
   \   000143   A3           INC     DPTR
   \   000144   A3           INC     DPTR
   \   000145   A3           INC     DPTR
   \   000146   A3           INC     DPTR
   \   000147   12....       LCALL   ?XLOAD_R2345
   \   00014A   7401         MOV     A,#0x1
   \   00014C   12....       LCALL   ?XSTACK_DISP0_8
   \   00014F   12....       LCALL   ?XSTORE_R2345
   \   000152   8E82         MOV     DPL,R6
   \   000154   8F83         MOV     DPH,R7
   \   000156   A3           INC     DPTR
   \   000157   A3           INC     DPTR
   \   000158   A3           INC     DPTR
   \   000159   A3           INC     DPTR
   \   00015A   78..         MOV     R0,#?V0 + 4
   \   00015C   12....       LCALL   ?L_MOV_X
   \   00015F   8E82         MOV     DPL,R6
   \   000161   8F83         MOV     DPH,R7
   \   000163   78..         MOV     R0,#?V0 + 8
   \   000165   12....       LCALL   ?L_MOV_X
   \   000168   7405         MOV     A,#0x5
   \   00016A   12....       LCALL   ?XSTACK_DISP0_8
   \   00016D   78..         MOV     R0,#?V0 + 12
   \   00016F   12....       LCALL   ?L_MOV_X
   \   000172   78..         MOV     R0,#?V0 + 4
   \   000174   79..         MOV     R1,#?V0 + 12
   \   000176   12....       LCALL   ?FLT_EQ
   \   000179   702B         JNZ     ??TGS813GetConcentration_7
   \   00017B   7401         MOV     A,#0x1
   \   00017D   12....       LCALL   ?XSTACK_DISP0_8
   \   000180   78..         MOV     R0,#?V0 + 0
   \   000182   12....       LCALL   ?L_MOV_X
   \   000185   78..         MOV     R0,#?V0 + 8
   \   000187   79..         MOV     R1,#?V0 + 0
   \   000189   12....       LCALL   ?FLT_EQ
   \   00018C   700A         JNZ     ??TGS813GetConcentration_8
   \   00018E   90....       MOV     DPTR,#__Constant_0
   \   000191   78..         MOV     R0,#?V0 + 0
   \   000193   12....       LCALL   ?L_MOV_X
   \   000196   8058         SJMP    ??TGS813GetConcentration_9
   \                     ??TGS813GetConcentration_8:
   \   000198   85....       MOV     ?V0 + 0,?V0 + 4
   \   00019B   85....       MOV     ?V0 + 1,?V0 + 5
   \   00019E   85....       MOV     ?V0 + 2,?V0 + 6
   \   0001A1   85....       MOV     ?V0 + 3,?V0 + 7
   \   0001A4   804A         SJMP    ??TGS813GetConcentration_9
   \                     ??TGS813GetConcentration_7:
   \   0001A6   7401         MOV     A,#0x1
   \   0001A8   12....       LCALL   ?XSTACK_DISP0_8
   \   0001AB   78..         MOV     R0,#?V0 + 12
   \   0001AD   12....       LCALL   ?L_MOV_X
   \   0001B0   78..         MOV     R0,#?V0 + 12
   \   0001B2   79..         MOV     R1,#?V0 + 8
   \   0001B4   12....       LCALL   ?FLT_SUB
   \   0001B7   78..         MOV     R0,#?V0 + 0
   \   0001B9   79..         MOV     R1,#?V0 + 4
   \   0001BB   12....       LCALL   ?FLT_SUB
   \   0001BE   78..         MOV     R0,#?V0 + 12
   \   0001C0   79..         MOV     R1,#?V0 + 0
   \   0001C2   12....       LCALL   ?FLT_MUL
   \   0001C5   85....       MOV     ?V0 + 0,?V0 + 12
   \   0001C8   85....       MOV     ?V0 + 1,?V0 + 13
   \   0001CB   85....       MOV     ?V0 + 2,?V0 + 14
   \   0001CE   85....       MOV     ?V0 + 3,?V0 + 15
   \   0001D1   7405         MOV     A,#0x5
   \   0001D3   12....       LCALL   ?XSTACK_DISP0_8
   \   0001D6   78..         MOV     R0,#?V0 + 12
   \   0001D8   12....       LCALL   ?L_MOV_X
   \   0001DB   78..         MOV     R0,#?V0 + 12
   \   0001DD   79..         MOV     R1,#?V0 + 4
   \   0001DF   12....       LCALL   ?FLT_SUB
   \   0001E2   78..         MOV     R0,#?V0 + 0
   \   0001E4   79..         MOV     R1,#?V0 + 12
   \   0001E6   12....       LCALL   ?FLT_DIV
   \   0001E9   78..         MOV     R0,#?V0 + 0
   \   0001EB   79..         MOV     R1,#?V0 + 8
   \   0001ED   12....       LCALL   ?FLT_ADD
    103          	return concentration;
   \                     ??TGS813GetConcentration_9:
   \   0001F0   78..         MOV     R0,#?V0 + 0
   \   0001F2   12....       LCALL   ?FLT_TO_L
   \                     ??TGS813GetConcentration_3:
   \   0001F5   AA..         MOV     R2,?V0 + 0
   \   0001F7   AB..         MOV     R3,?V0 + 1
   \                     ??TGS813GetConcentration_1:
   \   0001F9   7409         MOV     A,#0x9
   \   0001FB                REQUIRE ?Subroutine0
   \   0001FB                ; // Fall through to label ?Subroutine0
    104          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003   7F10         MOV     R7,#0x10
   \   000005   02....       LJMP    ?BANKED_LEAVE_XDATA
    105          
    106          
    107          
    108          //²ÎÊý£º´ÓDHT11»ñÈ¡µÄÎÂÊª¶ÈÊý¾Ý£¬·Ö±æÂÊÎª1£¬Èç¹ûÊ¹ÓÃ¸ü¼Ó¾«×¼µÄÎÂÊª¶È´«¸ÐÆ÷£¬ÐèÒª¸Ä±äÊäÈë²ÎÊýµÄÀàÐÍ
    109          //·µ»¹£º²¹³¥ºóµÄR0Öµ

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    110          float TGS813GetCookedRo(char DHT11_T,unsigned char DHT11_R)
   \                     TGS813GetCookedRo:
    111          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 26
   \   000005   74E6         MOV     A,#-0x1a
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FF           MOV     R7,A
   \   00000C   EA           MOV     A,R2
   \   00000D   FE           MOV     R6,A
    112          	char sub_T_Arr=0;
    113          	char sub_R_Arr=0;		//¼ÇÂ¼ÎÂÊª¶ÈÊý¾ÝÔÚÎÂ¶È£¬Êª¶ÈÊý×éÖÐµÄÏÂ±ê£¨¼´ÔÚÊý×éÖÐµÄÎ»ÖÃ£©
    114          	float RsR0_Ratio0=0;		//×îÖÕÐèÒªµÃµ½µÄ½á¹û
    115          	float TwoCoordinate[][2]=	//ÓÃÓÚ¼ÇÂ¼ÇóÄ¿±êÊý¾ÝËùÔÚÖ±ÏßµÄÁ½¸öµãµÄ×ø±ê
    116          	{
    117          		{0,0},			//¿¿×óµÄµã
    118          		{0,0},			//¿¿ÓÒµÄµã
    119          	};
   \   00000E   740A         MOV     A,#0xa
   \   000010   12....       LCALL   ?XSTACK_DISP0_8
   \   000013   AC82         MOV     R4,DPL
   \   000015   AD83         MOV     R5,DPH
   \   000017   7583..       MOV     DPH,#(`?<Constant {{(0.0F), (0.0F)}, {(0.0F), (0.0F)}` >> 8) & 0xff
   \   00001A   7582..       MOV     DPL,#`?<Constant {{(0.0F), (0.0F)}, {(0.0F), (0.0F)}` & 0xff
   \   00001D   7410         MOV     A,#0x10
   \   00001F   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    120                  char TEMP_ARR[20];
                              ^
Warning[Pe177]: variable "TEMP_ARR" was declared but never referenced
    121          
    122          	if(DHT11_T > TGS813GasSen_T[TGS813GasSen_T_Leghth-1])	//²âµÃµÄÎÂ¶ÈÖµ¸ßÓÚ·¶Î§£¬ÖÃÎ»±êÖ¾Î»µÄÎ»2
   \   000022   90....       MOV     DPTR,#TGS813GasSen_T + 10
   \   000025   8F..         MOV     ?V0 + 0,R7
   \   000027   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   00002A   500A         JNC     ??TGS813GetCookedRo_0
    123          	{
    124                    DHT11_T = TGS813GasSen_TEMP_MAX;  //ÉèÖÃÎÂÊª¶ÈÎªÄ¬ÈÏÖµ
   \   00002C   7F28         MOV     R7,#0x28
    125          		TGS813GasSen_Flag |=(1<<2);
   \   00002E   90....       MOV     DPTR,#TGS813GasSen_Flag
   \   000031   E0           MOVX    A,@DPTR
   \   000032   D2E2         SETB    0xE0 /* A   */.2
   \   000034   8015         SJMP    ??TGS813GetCookedRo_1
    126          	}
    127          	else if(DHT11_T < TGS813GasSen_T[0])			//²âµÃµÄÎÂ¶ÈÖµµÍÓÚ·¶Î§£¬ÖÃÎ»±êÖ¾Î»µÄÎ»3
   \                     ??TGS813GetCookedRo_0:
   \   000036   90....       MOV     DPTR,#TGS813GasSen_T
   \   000039   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   00003C   C3           CLR     C
   \   00003D   EF           MOV     A,R7
   \   00003E   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   000041   5009         JNC     ??TGS813GetCookedRo_2
    128          	{
    129                    DHT11_T = (char)TGS813GasSen_TEMP_MIN;   //ÉèÖÃÎÂÊª¶ÈÎªÄ¬ÈÏÖµ
   \   000043   7FF6         MOV     R7,#-0xa
    130          	  TGS813GasSen_Flag |=(1<<3);
   \   000045   90....       MOV     DPTR,#TGS813GasSen_Flag
   \   000048   E0           MOVX    A,@DPTR
   \   000049   D2E3         SETB    0xE0 /* A   */.3
   \                     ??TGS813GetCookedRo_1:
   \   00004B   F0           MOVX    @DPTR,A
    131          	}
    132          
    133          	if(DHT11_R > TGS813GasSen_R[TGS813GasSen_R_Leghth-1])	//²âµÃµÄÊª¶ÈÖµ¸ßÓÚ·¶Î§£¬ÖÃÎ»±êÖ¾Î»µÄÎ»4
   \                     ??TGS813GetCookedRo_2:
   \   00004C   90....       MOV     DPTR,#TGS813GasSen_R + 4
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   C3           CLR     C
   \   000051   9E           SUBB    A,R6
   \   000052   500A         JNC     ??TGS813GetCookedRo_3
    134          	{
    135                     DHT11_R =  TGS813GasSen_HUMI_MAX;
   \   000054   7E64         MOV     R6,#0x64
    136          	   TGS813GasSen_Flag |=(1<<4);
   \   000056   90....       MOV     DPTR,#TGS813GasSen_Flag
   \   000059   E0           MOVX    A,@DPTR
   \   00005A   D2E4         SETB    0xE0 /* A   */.4
   \   00005C   8012         SJMP    ??TGS813GetCookedRo_4
    137          	}
    138          	else if(DHT11_R < TGS813GasSen_R[0])			//²âµÃµÄÊª¶ÈÖµ¸ßÓÚ·¶Î§,ÖÃÎ»±êÖ¾Î»µÄÎ»5
   \                     ??TGS813GetCookedRo_3:
   \   00005E   90....       MOV     DPTR,#TGS813GasSen_R
   \   000061   E0           MOVX    A,@DPTR
   \   000062   F8           MOV     R0,A
   \   000063   EE           MOV     A,R6
   \   000064   C3           CLR     C
   \   000065   98           SUBB    A,R0
   \   000066   5009         JNC     ??TGS813GetCookedRo_5
    139          	{
    140                    DHT11_R =  TGS813GasSen_HUMI_MIN;
   \   000068   7E00         MOV     R6,#0x0
    141          	  TGS813GasSen_Flag |=(1<<5);
   \   00006A   90....       MOV     DPTR,#TGS813GasSen_Flag
   \   00006D   E0           MOVX    A,@DPTR
   \   00006E   D2E5         SETB    0xE0 /* A   */.5
   \                     ??TGS813GetCookedRo_4:
   \   000070   F0           MOVX    @DPTR,A
    142          	}
    143          
    144          	//Ñ­»·£¬ÅÐ¶ÏÔÚÄÄ¸öÎÂ¶ÈµÄÇø¼ä£¬µÃµ½Êý×éµÄÏÂ±ê
    145          	for(sub_T_Arr=0; sub_T_Arr<TGS813GasSen_T_Leghth; sub_T_Arr++)				
   \                     ??TGS813GetCookedRo_5:
   \   000071   75..00       MOV     ?V0 + 2,#0x0
    146          	{	
    147          		if((DHT11_T >= TGS813GasSen_T[sub_T_Arr]) && (DHT11_T <= TGS813GasSen_T[sub_T_Arr+1]))	
   \                     ??TGS813GetCookedRo_6:
   \   000074   8F..         MOV     ?V0 + 0,R7
   \   000076   E5..         MOV     A,?V0 + 2
   \   000078   C3           CLR     C
   \   000079   33           RLC     A
   \   00007A   F8           MOV     R0,A
   \   00007B   E4           CLR     A
   \   00007C   33           RLC     A
   \   00007D   F9           MOV     R1,A
   \   00007E   74..         MOV     A,#TGS813GasSen_T & 0xff
   \   000080   28           ADD     A,R0
   \   000081   F582         MOV     DPL,A
   \   000083   74..         MOV     A,#(TGS813GasSen_T >> 8) & 0xff
   \   000085   39           ADDC    A,R1
   \   000086   F583         MOV     DPH,A
   \   000088   12....       LCALL   ?Subroutine3 & 0xFFFF
    148          		break;
    149          	}
   \                     ??CrossCallReturnLabel_5:
   \   00008B   C3           CLR     C
   \   00008C   E5..         MOV     A,?V0 + 0
   \   00008E   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000091   4017         JC      ??TGS813GetCookedRo_7
   \   000093   E5..         MOV     A,?V0 + 2
   \   000095   C3           CLR     C
   \   000096   33           RLC     A
   \   000097   F8           MOV     R0,A
   \   000098   E4           CLR     A
   \   000099   33           RLC     A
   \   00009A   F9           MOV     R1,A
   \   00009B   74..         MOV     A,#(TGS813GasSen_T + 2) & 0xff
   \   00009D   28           ADD     A,R0
   \   00009E   F582         MOV     DPL,A
   \   0000A0   74..         MOV     A,#((TGS813GasSen_T + 2) >> 8) & 0xff
   \   0000A2   39           ADDC    A,R1
   \   0000A3   F583         MOV     DPH,A
   \   0000A5   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   0000A8   5009         JNC     ??TGS813GetCookedRo_8
   \                     ??TGS813GetCookedRo_7:
   \   0000AA   05..         INC     ?V0 + 2
   \   0000AC   E5..         MOV     A,?V0 + 2
   \   0000AE   C3           CLR     C
   \   0000AF   9406         SUBB    A,#0x6
   \   0000B1   40C1         JC      ??TGS813GetCookedRo_6
    150          	//Ñ­»·£¬ÅÐ¶ÏÔÚÄÄ¸öÊª¶ÈµÄÇø¼ä£¬µÃµ½Êý×éµÄÏÂ±ê
    151          	for(sub_R_Arr=0; sub_R_Arr<TGS813GasSen_R_Leghth; sub_R_Arr++)				
   \                     ??TGS813GetCookedRo_8:
   \   0000B3   7800         MOV     R0,#0x0
    152          	{	
    153          		if((DHT11_R >= TGS813GasSen_R[sub_R_Arr]) && (DHT11_R <= TGS813GasSen_R[sub_R_Arr+1]))	
   \                     ??TGS813GetCookedRo_9:
   \   0000B5   88..         MOV     ?V0 + 0,R0
   \   0000B7   74..         MOV     A,#TGS813GasSen_R & 0xff
   \   0000B9   25..         ADD     A,?V0 + 0
   \   0000BB   F582         MOV     DPL,A
   \   0000BD   74..         MOV     A,#(TGS813GasSen_R >> 8) & 0xff
   \   0000BF   3400         ADDC    A,#0x0
   \   0000C1   F583         MOV     DPH,A
   \   0000C3   E0           MOVX    A,@DPTR
   \   0000C4   F9           MOV     R1,A
   \   0000C5   EE           MOV     A,R6
   \   0000C6   C3           CLR     C
   \   0000C7   99           SUBB    A,R1
   \   0000C8   4011         JC      ??TGS813GetCookedRo_10
   \   0000CA   74..         MOV     A,#(TGS813GasSen_R + 1) & 0xff
   \   0000CC   25..         ADD     A,?V0 + 0
   \   0000CE   F582         MOV     DPL,A
   \   0000D0   74..         MOV     A,#((TGS813GasSen_R + 1) >> 8) & 0xff
   \   0000D2   3400         ADDC    A,#0x0
   \   0000D4   F583         MOV     DPH,A
   \   0000D6   E0           MOVX    A,@DPTR
   \   0000D7   C3           CLR     C
   \   0000D8   9E           SUBB    A,R6
   \   0000D9   5007         JNC     ??TGS813GetCookedRo_11
    154          		break;
    155          	}
   \                     ??TGS813GetCookedRo_10:
   \   0000DB   08           INC     R0
   \   0000DC   E8           MOV     A,R0
   \   0000DD   C3           CLR     C
   \   0000DE   9405         SUBB    A,#0x5
   \   0000E0   40D3         JC      ??TGS813GetCookedRo_9
    156          	
    157          	//¼ÆËãÁ½µã×ø±ê
    158          	TwoCoordinate[0][0] = TGS813Fig2Data[sub_R_Arr][sub_T_Arr][0];
   \                     ??TGS813GetCookedRo_11:
   \   0000E2   8882         MOV     DPL,R0
   \   0000E4   8582..       MOV     ?V0 + 0,DPL
   \   0000E7   E8           MOV     A,R0
   \   0000E8   75F030       MOV     B,#0x30
   \   0000EB   A4           MUL     AB
   \   0000EC   F8           MOV     R0,A
   \   0000ED   A9F0         MOV     R1,B
   \   0000EF   74..         MOV     A,#TGS813Fig2Data & 0xff
   \   0000F1   28           ADD     A,R0
   \   0000F2   F8           MOV     R0,A
   \   0000F3   74..         MOV     A,#(TGS813Fig2Data >> 8) & 0xff
   \   0000F5   39           ADDC    A,R1
   \   0000F6   F9           MOV     R1,A
   \   0000F7   7404         MOV     A,#0x4
   \   0000F9   12....       LCALL   ?XSTACK_DISP0_8
   \   0000FC   E8           MOV     A,R0
   \   0000FD   F0           MOVX    @DPTR,A
   \   0000FE   A3           INC     DPTR
   \   0000FF   E9           MOV     A,R1
   \   000100   F0           MOVX    @DPTR,A
   \   000101   75..00       MOV     ?V0 + 3,#0x0
   \   000104   7403         MOV     A,#0x3
   \   000106   78..         MOV     R0,#?V0 + 2
   \   000108   12....       LCALL   ?S_SHL
   \   00010B   7402         MOV     A,#0x2
   \   00010D   12....       LCALL   ?XSTACK_DISP0_8
   \   000110   E5..         MOV     A,?V0 + 2
   \   000112   F0           MOVX    @DPTR,A
   \   000113   A3           INC     DPTR
   \   000114   E5..         MOV     A,?V0 + 3
   \   000116   F0           MOVX    @DPTR,A
   \   000117   7402         MOV     A,#0x2
   \   000119   12....       LCALL   ?XSTACK_DISP0_8
   \   00011C   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   00011F   7404         MOV     A,#0x4
   \   000121   12....       LCALL   ?XSTACK_DISP0_8
   \   000124   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000127   85..82       MOV     DPL,?XSP + 0
   \   00012A   85..83       MOV     DPH,?XSP + 1
   \   00012D   E8           MOV     A,R0
   \   00012E   F0           MOVX    @DPTR,A
   \   00012F   A3           INC     DPTR
   \   000130   E9           MOV     A,R1
   \   000131   F0           MOVX    @DPTR,A
   \   000132   85..82       MOV     DPL,?XSP + 0
   \   000135   85..83       MOV     DPH,?XSP + 1
   \   000138   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   00013B   12....       LCALL   ?XLOAD_R2345
   \   00013E   740A         MOV     A,#0xa
   \   000140   12....       LCALL   ?XSTACK_DISP0_8
   \   000143   12....       LCALL   ?XSTORE_R2345
    159          	TwoCoordinate[1][0] = TGS813Fig2Data[sub_R_Arr][sub_T_Arr+1][0];
   \   000146   85..82       MOV     DPL,?XSP + 0
   \   000149   85..83       MOV     DPH,?XSP + 1
   \   00014C   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   00014F   A3           INC     DPTR
   \   000150   A3           INC     DPTR
   \   000151   A3           INC     DPTR
   \   000152   A3           INC     DPTR
   \   000153   12....       LCALL   ?XLOAD_R2345
   \   000156   7406         MOV     A,#0x6
   \   000158   12....       LCALL   ?XSTACK_DISP0_8
   \   00015B   12....       LCALL   ?XSTORE_R2345
   \   00015E   7406         MOV     A,#0x6
   \   000160   12....       LCALL   ?XSTACK_DISP0_8
   \   000163   12....       LCALL   ?XLOAD_R2345
   \   000166   7412         MOV     A,#0x12
   \   000168   12....       LCALL   ?XSTACK_DISP0_8
   \   00016B   12....       LCALL   ?XSTORE_R2345
    160          	TwoCoordinate[0][1] = GetYFromTwoPoint(TGS813GasSen_R[sub_R_Arr] , TGS813Fig2Data[sub_R_Arr][sub_T_Arr][1] , TGS813GasSen_R[sub_R_Arr+1] , TGS813Fig2Data[sub_R_Arr+1][sub_T_Arr][1],DHT11_R);
   \   00016E   74..         MOV     A,#TGS813GasSen_R & 0xff
   \   000170   25..         ADD     A,?V0 + 0
   \   000172   F8           MOV     R0,A
   \   000173   74..         MOV     A,#(TGS813GasSen_R >> 8) & 0xff
   \   000175   3400         ADDC    A,#0x0
   \   000177   F9           MOV     R1,A
   \   000178   E8           MOV     A,R0
   \   000179   FA           MOV     R2,A
   \   00017A   E9           MOV     A,R1
   \   00017B   FB           MOV     R3,A
   \   00017C   8A82         MOV     DPL,R2
   \   00017E   8B83         MOV     DPH,R3
   \   000180   A3           INC     DPTR
   \   000181   E0           MOVX    A,@DPTR
   \   000182   F5..         MOV     ?V0 + 4,A
   \   000184   E4           CLR     A
   \   000185   F5..         MOV     ?V0 + 5,A
   \   000187   F5..         MOV     ?V0 + 6,A
   \   000189   F5..         MOV     ?V0 + 7,A
   \   00018B   78..         MOV     R0,#?V0 + 4
   \   00018D   12....       LCALL   ?UL_TO_FLT
   \   000190   8A82         MOV     DPL,R2
   \   000192   8B83         MOV     DPH,R3
   \   000194   E0           MOVX    A,@DPTR
   \   000195   F5..         MOV     ?V0 + 8,A
   \   000197   E4           CLR     A
   \   000198   F5..         MOV     ?V0 + 9,A
   \   00019A   F5..         MOV     ?V0 + 10,A
   \   00019C   F5..         MOV     ?V0 + 11,A
   \   00019E   78..         MOV     R0,#?V0 + 8
   \   0001A0   12....       LCALL   ?UL_TO_FLT
   \   0001A3   8E..         MOV     ?V0 + 12,R6
   \   0001A5   E4           CLR     A
   \   0001A6   F5..         MOV     ?V0 + 13,A
   \   0001A8   F5..         MOV     ?V0 + 14,A
   \   0001AA   F5..         MOV     ?V0 + 15,A
   \   0001AC   78..         MOV     R0,#?V0 + 12
   \   0001AE   12....       LCALL   ?UL_TO_FLT
   \   0001B1                ; Setup parameters for call to function GetYFromTwoPoint
   \   0001B1   78..         MOV     R0,#?V0 + 12
   \   0001B3   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   0001B6   7406         MOV     A,#0x6
   \   0001B8   12....       LCALL   ?XSTACK_DISP0_8
   \   0001BB   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   0001BE   7408         MOV     A,#0x8
   \   0001C0   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C3   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   0001C6   E8           MOV     A,R0
   \   0001C7   2434         ADD     A,#0x34
   \   0001C9   F582         MOV     DPL,A
   \   0001CB   E9           MOV     A,R1
   \   0001CC   3400         ADDC    A,#0x0
   \   0001CE   F583         MOV     DPH,A
   \   0001D0   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   0001D3   78..         MOV     R0,#?V0 + 4
   \   0001D5   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   0001D8   740C         MOV     A,#0xc
   \   0001DA   12....       LCALL   ?XSTACK_DISP0_8
   \   0001DD   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   0001E0   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   0001E3   AA..         MOV     R2,?V0 + 8
   \   0001E5   AB..         MOV     R3,?V0 + 9
   \   0001E7   AC..         MOV     R4,?V0 + 10
   \   0001E9   AD..         MOV     R5,?V0 + 11
   \   0001EB   12....       LCALL   ??GetYFromTwoPoint?relay
   \   0001EE   7410         MOV     A,#0x10
   \   0001F0   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001F3   8A..         MOV     ?V0 + 0,R2
   \   0001F5   8B..         MOV     ?V0 + 1,R3
   \   0001F7   8C..         MOV     ?V0 + 2,R4
   \   0001F9   8D..         MOV     ?V0 + 3,R5
   \   0001FB   740E         MOV     A,#0xe
   \   0001FD   12....       LCALL   ?XSTACK_DISP0_8
   \   000200   78..         MOV     R0,#?V0 + 0
   \   000202   12....       LCALL   ?L_MOV_TO_X
    161          	TwoCoordinate[1][1] = GetYFromTwoPoint(TGS813GasSen_R[sub_R_Arr] , TGS813Fig2Data[sub_R_Arr][sub_T_Arr+1][1] , TGS813GasSen_R[sub_R_Arr+1] , TGS813Fig2Data[sub_R_Arr+1][sub_T_Arr+1][1],DHT11_R);
   \   000205                ; Setup parameters for call to function GetYFromTwoPoint
   \   000205   78..         MOV     R0,#?V0 + 12
   \   000207   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00020A   7406         MOV     A,#0x6
   \   00020C   12....       LCALL   ?XSTACK_DISP0_8
   \   00020F   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000212   7408         MOV     A,#0x8
   \   000214   12....       LCALL   ?XSTACK_DISP0_8
   \   000217   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   00021A   E8           MOV     A,R0
   \   00021B   243C         ADD     A,#0x3c
   \   00021D   F582         MOV     DPL,A
   \   00021F   E9           MOV     A,R1
   \   000220   3400         ADDC    A,#0x0
   \   000222   F583         MOV     DPH,A
   \   000224   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000227   78..         MOV     R0,#?V0 + 4
   \   000229   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00022C   740C         MOV     A,#0xc
   \   00022E   12....       LCALL   ?XSTACK_DISP0_8
   \   000231   E0           MOVX    A,@DPTR
   \   000232   240C         ADD     A,#0xc
   \   000234   F8           MOV     R0,A
   \   000235   A3           INC     DPTR
   \   000236   E0           MOVX    A,@DPTR
   \   000237   3400         ADDC    A,#0x0
   \   000239   F9           MOV     R1,A
   \   00023A   8882         MOV     DPL,R0
   \   00023C   8983         MOV     DPH,R1
   \   00023E   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000241   AA..         MOV     R2,?V0 + 8
   \   000243   AB..         MOV     R3,?V0 + 9
   \   000245   AC..         MOV     R4,?V0 + 10
   \   000247   AD..         MOV     R5,?V0 + 11
   \   000249   12....       LCALL   ??GetYFromTwoPoint?relay
   \   00024C   7410         MOV     A,#0x10
   \   00024E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000251   8A..         MOV     ?V0 + 4,R2
   \   000253   8B..         MOV     ?V0 + 5,R3
   \   000255   8C..         MOV     ?V0 + 6,R4
   \   000257   8D..         MOV     ?V0 + 7,R5
   \   000259   7416         MOV     A,#0x16
   \   00025B   12....       LCALL   ?XSTACK_DISP0_8
   \   00025E   78..         MOV     R0,#?V0 + 4
   \   000260   12....       LCALL   ?L_MOV_TO_X
    162          	
    163          	//µÃµ½½á¹û£¬RsºÍR0µÄ±ÈÖµ
    164          	RsR0_Ratio0 = GetYFromTwoPoint(TwoCoordinate[0][0],TwoCoordinate[0][1],TwoCoordinate[1][0],TwoCoordinate[1][1],DHT11_T);
    165          
    166          	return RsR0_Ratio0 * TGS813GasSen_Standard_R0;
   \   000263                ; Setup parameters for call to function GetYFromTwoPoint
   \   000263   8F..         MOV     ?V0 + 8,R7
   \   000265   E4           CLR     A
   \   000266   F5..         MOV     ?V0 + 9,A
   \   000268   F5..         MOV     ?V0 + 10,A
   \   00026A   F5..         MOV     ?V0 + 11,A
   \   00026C   78..         MOV     R0,#?V0 + 8
   \   00026E   12....       LCALL   ?UL_TO_FLT
   \   000271   78..         MOV     R0,#?V0 + 8
   \   000273   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000276   78..         MOV     R0,#?V0 + 4
   \   000278   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00027B   740E         MOV     A,#0xe
   \   00027D   12....       LCALL   ?XSTACK_DISP0_8
   \   000280   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000283   78..         MOV     R0,#?V0 + 0
   \   000285   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000288   741A         MOV     A,#0x1a
   \   00028A   12....       LCALL   ?XSTACK_DISP0_8
   \   00028D   12....       LCALL   ?XLOAD_R2345
   \   000290   12....       LCALL   ??GetYFromTwoPoint?relay
   \   000293   7410         MOV     A,#0x10
   \   000295   12....       LCALL   ?DEALLOC_XSTACK8
   \   000298   8A..         MOV     ?V0 + 0,R2
   \   00029A   8B..         MOV     ?V0 + 1,R3
   \   00029C   8C..         MOV     ?V0 + 2,R4
   \   00029E   8D..         MOV     ?V0 + 3,R5
   \   0002A0   90....       MOV     DPTR,#__Constant_41e00000
   \   0002A3   78..         MOV     R0,#?V0 + 4
   \   0002A5   12....       LCALL   ?L_MOV_X
   \   0002A8   78..         MOV     R0,#?V0 + 0
   \   0002AA   79..         MOV     R1,#?V0 + 4
   \   0002AC   12....       LCALL   ?FLT_MUL
   \   0002AF   AA..         MOV     R2,?V0 + 0
   \   0002B1   AB..         MOV     R3,?V0 + 1
   \   0002B3   AC..         MOV     R4,?V0 + 2
   \   0002B5   AD..         MOV     R5,?V0 + 3
   \   0002B7   741A         MOV     A,#0x1a
   \   0002B9   02....       LJMP    ?Subroutine0 & 0xFFFF
    167          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   98           SUBB    A,R0
   \   000001   E4           CLR     A
   \   000002   99           SUBB    A,R1
   \   000003   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000005   65D0         XRL     A,PSW
   \   000007   33           RLC     A
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   28           ADD     A,R0
   \   000002   F8           MOV     R0,A
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   39           ADDC    A,R1
   \   000006   F9           MOV     R1,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F583         MOV     DPH,A
   \   000006   8882         MOV     DPL,R0
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   C3           CLR     C
   \   000001   E0           MOVX    A,@DPTR
   \   000002   95..         SUBB    A,?V0 + 0
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   9400         SUBB    A,#0x0
   \   000008   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00000A   65D0         XRL     A,PSW
   \   00000C   33           RLC     A
   \   00000D   22           RET
    168          
    169          //¶ÔÓÚÒ»ÌõÍ¨¹ýÁ½µãÈ·¶¨µÄÖ±Ïß£¬¸ø¶¨Ò»¸öyÖµ£¬·µ»¹xÖµ
    170          float GetXFromTwoPoint(float x1,float y1,float x2,float y2,float y)
    171          {
    172          	if(y1 == y2)			
    173          	{
    174          		if(x1 == x2)
    175          		{
    176          			return 0;		//Èç¹ûÊäÈëµÄÁ½µãÖØºÏÁË£¬Ôò·µ»Ø0
    177          		}				
    178          		return y1;			//Èç¹ûÁ½µãµÄy×ø±êÏàµÈ£¬Ôò·µ»¹y×ø±ê
    179          	}
    180          	
    181          	else
    182          		return ((x2-x1)*(y-y1))/(y2-y1) + x1;
    183          }
    184          //¶ÔÓÚÒ»ÌõÍ¨¹ýÁ½µãÈ·¶¨µÄÖ±Ïß£¬¸ø¶¨Ò»¸öxÖµ£¬·µ»¹yÖµ

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    185          float GetYFromTwoPoint(float x1,float y1,float x2,float y2,float x)
   \                     GetYFromTwoPoint:
    186          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   A3           INC     DPTR
   \   000016   EC           MOV     A,R4
   \   000017   F0           MOVX    @DPTR,A
   \   000018   A3           INC     DPTR
   \   000019   ED           MOV     A,R5
   \   00001A   F0           MOVX    @DPTR,A
   \   00001B   741C         MOV     A,#0x1c
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   78..         MOV     R0,#?V0 + 0
   \   000022   12....       LCALL   ?L_MOV_X
   \   000025   7420         MOV     A,#0x20
   \   000027   12....       LCALL   ?XSTACK_DISP0_8
   \   00002A   78..         MOV     R0,#?V0 + 4
   \   00002C   12....       LCALL   ?L_MOV_X
   \   00002F   7424         MOV     A,#0x24
   \   000031   12....       LCALL   ?XSTACK_DISP0_8
   \   000034   78..         MOV     R0,#?V0 + 8
   \   000036   12....       LCALL   ?L_MOV_X
    187          	if(x1 == x2)
   \   000039   85..82       MOV     DPL,?XSP + 0
   \   00003C   85..83       MOV     DPH,?XSP + 1
   \   00003F   78..         MOV     R0,#?V0 + 12
   \   000041   12....       LCALL   ?L_MOV_X
   \   000044   78..         MOV     R0,#?V0 + 12
   \   000046   79..         MOV     R1,#?V0 + 4
   \   000048   12....       LCALL   ?FLT_EQ
   \   00004B   701E         JNZ     ??GetYFromTwoPoint_0
    188          	{
    189          		if(y1 == y2)
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   79..         MOV     R1,#?V0 + 8
   \   000051   12....       LCALL   ?FLT_EQ
   \   000054   700A         JNZ     ??GetYFromTwoPoint_1
    190          		{
    191          			return 0;		//Èç¹ûÊäÈëµÄÁ½µãÖØºÏÁË£¬Ôò·µ»Ø0
   \   000056   7A00         MOV     R2,#0x0
   \   000058   7B00         MOV     R3,#0x0
   \   00005A   7C00         MOV     R4,#0x0
   \   00005C   7D00         MOV     R5,#0x0
   \   00005E   806D         SJMP    ??GetYFromTwoPoint_2
    192          		}	
    193          		return x1;			//Èç¹ûÁ½µãµÄx×ø±êÏàµÈ£¬Ôò·µ»¹x×ø±ê
   \                     ??GetYFromTwoPoint_1:
   \   000060   85..82       MOV     DPL,?XSP + 0
   \   000063   85..83       MOV     DPH,?XSP + 1
   \   000066   12....       LCALL   ?XLOAD_R2345
   \   000069   8062         SJMP    ??GetYFromTwoPoint_2
    194          	}
    195          	else
    196          		return ((y2-y1)*(x-x1))/(x2-x1) + y1;
   \                     ??GetYFromTwoPoint_0:
   \   00006B   78..         MOV     R0,#?V0 + 8
   \   00006D   79..         MOV     R1,#?V0 + 0
   \   00006F   12....       LCALL   ?FLT_SUB
   \   000072   C0..         PUSH    ?V0 + 8
   \   000074   C0..         PUSH    ?V0 + 9
   \   000076   C0..         PUSH    ?V0 + 10
   \   000078   C0..         PUSH    ?V0 + 11
   \   00007A   7428         MOV     A,#0x28
   \   00007C   12....       LCALL   ?XSTACK_DISP0_8
   \   00007F   78..         MOV     R0,#?V0 + 12
   \   000081   12....       LCALL   ?L_MOV_X
   \   000084   85..82       MOV     DPL,?XSP + 0
   \   000087   85..83       MOV     DPH,?XSP + 1
   \   00008A   78..         MOV     R0,#?V0 + 8
   \   00008C   12....       LCALL   ?L_MOV_X
   \   00008F   78..         MOV     R0,#?V0 + 12
   \   000091   79..         MOV     R1,#?V0 + 8
   \   000093   12....       LCALL   ?FLT_SUB
   \   000096   D0..         POP     ?V0 + 11
   \   000098   D0..         POP     ?V0 + 10
   \   00009A   D0..         POP     ?V0 + 9
   \   00009C   D0..         POP     ?V0 + 8
   \   00009E   78..         MOV     R0,#?V0 + 8
   \   0000A0   79..         MOV     R1,#?V0 + 12
   \   0000A2   12....       LCALL   ?FLT_MUL
   \   0000A5   85..82       MOV     DPL,?XSP + 0
   \   0000A8   85..83       MOV     DPH,?XSP + 1
   \   0000AB   78..         MOV     R0,#?V0 + 12
   \   0000AD   12....       LCALL   ?L_MOV_X
   \   0000B0   78..         MOV     R0,#?V0 + 4
   \   0000B2   79..         MOV     R1,#?V0 + 12
   \   0000B4   12....       LCALL   ?FLT_SUB
   \   0000B7   78..         MOV     R0,#?V0 + 8
   \   0000B9   79..         MOV     R1,#?V0 + 4
   \   0000BB   12....       LCALL   ?FLT_DIV
   \   0000BE   78..         MOV     R0,#?V0 + 8
   \   0000C0   79..         MOV     R1,#?V0 + 0
   \   0000C2   12....       LCALL   ?FLT_ADD
   \   0000C5   AA..         MOV     R2,?V0 + 8
   \   0000C7   AB..         MOV     R3,?V0 + 9
   \   0000C9   AC..         MOV     R4,?V0 + 10
   \   0000CB   AD..         MOV     R5,?V0 + 11
   \                     ??GetYFromTwoPoint_2:
   \   0000CD   7404         MOV     A,#0x4
   \   0000CF   02....       LJMP    ?Subroutine0 & 0xFFFF
    197          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for TGS813GasSen_T>`:
   \   000000   F6FF         DW -10
   \   000002   0000         DW 0
   \   000004   0A00         DW 10
   \   000006   1400         DW 20
   \   000008   1E00         DW 30
   \   00000A   2800         DW 40

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for TGS813GasSen_R>`:
   \   000000   00           DB 0
   \   000001   14           DB 20
   \   000002   28           DB 40
   \   000003   41           DB 65
   \   000004   64           DB 100

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for TGS813Fig1Data>`:
   \   000000   0000FA43     DD 43FA0000H
   \   000004   0000C03F     DD 3FC00000H
   \   000008   00001644     DD 44160000H
   \   00000C   3333B33F     DD 3FB33333H
   \   000010   00002F44     DD 442F0000H
   \   000014   6666A63F     DD 3FA66666H
   \   000018   00004844     DD 44480000H
   \   00001C   9A99993F     DD 3F99999AH
   \   000020   00006144     DD 44610000H
   \   000024   CDCC8C3F     DD 3F8CCCCDH
   \   000028   00007A44     DD 447A0000H
   \   00002C   0000803F     DD 3F800000H
   \   000030   0080A244     DD 44A28000H
   \   000034   6666663F     DD 3F666666H
   \   000038   0080D444     DD 44D48000H
   \   00003C   CDCC4C3F     DD 3F4CCCCDH
   \   000040   0000FA44     DD 44FA0000H
   \   000044   48E13A3F     DD 3F3AE148H
   \   000048   00400345     DD 45034000H
   \   00004C   3333333F     DD 3F333333H
   \   000050   00803B45     DD 453B8000H
   \   000054   9A99193F     DD 3F19999AH
   \   000058   00007A45     DD 457A0000H
   \   00005C   14AE073F     DD 3F07AE14H
   \   000060   00808945     DD 45898000H
   \   000064   0000003F     DD 3F000000H
   \   000068   00409C45     DD 459C4000H
   \   00006C   D7A3F03E     DD 3EF0A3D7H
   \   000070   0080BB45     DD 45BB8000H
   \   000074   F628DC3E     DD 3EDC28F6H
   \   000078   00C0DA45     DD 45DAC000H
   \   00007C   85EBD13E     DD 3ED1EB85H
   \   000080   0000FA45     DD 45FA0000H
   \   000084   5C8FC23E     DD 3EC28F5CH
   \   000088   00A00C46     DD 460CA000H
   \   00008C   EC51B83E     DD 3EB851ECH
   \   000090   00401C46     DD 461C4000H
   \   000094   3333B33E     DD 3EB33333H

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for TGS813Fig2Data>`:
   \   000000   000020C1     DD 0C1200000H
   \   000004   295CEF3F     DD 3FEF5C29H
   \   000008   00000000     DD 0H
   \   00000C   B81EE53F     DD 3FE51EB8H
   \   000010   00002041     DD 41200000H
   \   000014   52B8DE3F     DD 3FDEB852H
   \   000018   0000A041     DD 41A00000H
   \   00001C   3D0AD73F     DD 3FD70A3DH
   \   000020   0000F041     DD 41F00000H
   \   000024   3333D33F     DD 3FD33333H
   \   000028   00002042     DD 42200000H
   \   00002C   7B14CE3F     DD 3FCE147BH
   \   000030   000020C1     DD 0C1200000H
   \   000034   A470DD3F     DD 3FDD70A4H
   \   000038   00000000     DD 0H
   \   00003C   5C8FC23F     DD 3FC28F5CH
   \   000040   00002041     DD 41200000H
   \   000044   CDCCAC3F     DD 3FACCCCDH
   \   000048   0000A041     DD 41A00000H
   \   00004C   48E19A3F     DD 3F9AE148H
   \   000050   0000F041     DD 41F00000H
   \   000054   295C8F3F     DD 3F8F5C29H
   \   000058   00002042     DD 42200000H
   \   00005C   C3F5883F     DD 3F88F5C3H
   \   000060   000020C1     DD 0C1200000H
   \   000064   3D0AD73F     DD 3FD70A3DH
   \   000068   00000000     DD 0H
   \   00006C   9A99B93F     DD 3FB9999AH
   \   000070   00002041     DD 41200000H
   \   000074   0000A03F     DD 3FA00000H
   \   000078   0000A041     DD 41A00000H
   \   00007C   CDCC8C3F     DD 3F8CCCCDH
   \   000080   0000F041     DD 41F00000H
   \   000084   48E17A3F     DD 3F7AE148H
   \   000088   00002042     DD 42200000H
   \   00008C   1F856B3F     DD 3F6B851FH
   \   000090   000020C1     DD 0C1200000H
   \   000094   7B14CE3F     DD 3FCE147BH
   \   000098   00000000     DD 0H
   \   00009C   CDCCAC3F     DD 3FACCCCDH
   \   0000A0   00002041     DD 41200000H
   \   0000A4   3333933F     DD 3F933333H
   \   0000A8   0000A041     DD 41A00000H
   \   0000AC   0000803F     DD 3F800000H
   \   0000B0   0000F041     DD 41F00000H
   \   0000B4   6666663F     DD 3F666666H
   \   0000B8   00002042     DD 42200000H
   \   0000BC   F6285C3F     DD 3F5C28F6H
   \   0000C0   000020C1     DD 0C1200000H
   \   0000C4   6666C63F     DD 3FC66666H
   \   0000C8   00000000     DD 0H
   \   0000CC   6666A63F     DD 3FA66666H
   \   0000D0   00002041     DD 41200000H
   \   0000D4   CDCC8C3F     DD 3F8CCCCDH
   \   0000D8   0000A041     DD 41A00000H
   \   0000DC   8FC2753F     DD 3F75C28FH
   \   0000E0   0000F041     DD 41F00000H
   \   0000E4   F6285C3F     DD 3F5C28F6H
   \   0000E8   00002042     DD 42200000H
   \   0000EC   E17A543F     DD 3F547AE1H

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??TGS813GetConcentration?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    TGS813GetConcentration

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??TGS813GetCookedRo?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    TGS813GetCookedRo

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GetYFromTwoPoint?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GetYFromTwoPoint

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {{(0.0F), (0.0F)}, {(0.0F), (0.0F)}`:
   \   000000   00000000     DD 0H
   \   000004   00000000     DD 0H
   \   000008   00000000     DD 0H
   \   00000C   00000000     DD 0H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_bc23d70a:
   \   000000   0AD723BC     DD 0BC23D70AH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_bf800000:
   \   000000   000080BF     DD 0BF800000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_0:
   \   000000   00000000     DD 0H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_41e00000:
   \   000000   0000E041     DD 41E00000H
    198          /* For Test in VC++
    199          void main()
    200          {
    201          	printf("Gas concertation:%dppm\r\n",TGS813GetConcentration(0.16129f,20,50));
    202          }*/
    203          #endif

   Maximum stack usage in bytes:

     Function               ISTACK PSTACK XSTACK
     --------               ------ ------ ------
     GetYFromTwoPoint           4      0     94
     TGS813GetConcentration     1      0     34
       -> TGS813GetCookedRo     0      0     66
     TGS813GetCookedRo          2      0     99
       -> GetYFromTwoPoint      0      0    132
       -> GetYFromTwoPoint      0      0    132
       -> GetYFromTwoPoint      0      0    132


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     TGS813GasSen_T                                   12
     TGS813GasSen_R                                    5
     TGS813GasSen_Flag                                 1
     TGS813Fig1Data                                  152
     TGS813Fig2Data                                  240
     TGS813GetConcentration                          507
     ?Subroutine0                                      8
     TGS813GetCookedRo                               700
     ?Subroutine5                                      9
     ?Subroutine4                                      8
     ?Subroutine3                                      6
     ?Subroutine2                                      8
     ?Subroutine6                                      9
     ?Subroutine1                                     14
     GetYFromTwoPoint                                210
     ?<Initializer for TGS813GasSen_T>                12
     ?<Initializer for TGS813GasSen_R>                 5
     ?<Initializer for TGS813Fig1Data>               152
     ?<Initializer for TGS813Fig2Data>               240
     ??TGS813GetConcentration?relay                    6
     ??TGS813GetCookedRo?relay                         6
     ??GetYFromTwoPoint?relay                          6
     ?<Constant {{(0.0F), (0.0F)}, {(0.0F), (0.0F)}   16
     __Constant_bc23d70a                               4
     __Constant_bf800000                               4
     __Constant_0                                      4
     __Constant_41e00000                               4

 
 1 479 bytes in segment BANKED_CODE
    18 bytes in segment BANK_RELAYS
   409 bytes in segment XDATA_I
   409 bytes in segment XDATA_ID
    32 bytes in segment XDATA_ROM_C
     1 byte  in segment XDATA_Z
 
 1 906 bytes of CODE  memory
    16 bytes of CONST memory (+ 16 bytes shared)
   410 bytes of XDATA memory

Errors: none
Warnings: 1
