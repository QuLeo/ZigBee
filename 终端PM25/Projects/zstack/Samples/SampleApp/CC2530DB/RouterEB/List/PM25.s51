///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        22/Sep/2017  02:35:51 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\Administrator\Desktop\TENZ×é²¥           /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\Source\PM25 /
//                          .c                                                /
//    Command line       =  -f "C:\Users\Administrator\Desktop\TENZ×é²¥       /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\Tools\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ  /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                  /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\Tools\CC2530DB\f8wConfig.cfg"              /
//                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0     /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFF00                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "C:\Users\Administrator\De /
//                          sktop\TENZ×é²¥ ¸Ä2\Projects\zstack\Samples\Sample /
//                          App\Source\PM25.c" -D ZTOOL_P1 -D MT_TASK -D      /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          xLCD_SUPPORTED=DEBUG -D HAL_ADC -D                /
//                          Channel_1_For_TGS813 -lC                          /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\Ro /
//                          uterEB\List\" -lA "C:\Users\Administrator\Desktop /
//                          \TENZ×é²¥ ¸Ä2\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\RouterEB\List\" --diag_suppress           /
//                          Pe001,Pa010 -o "C:\Users\Administrator\Desktop\TE /
//                          NZ×é²¥ ¸Ä2\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\RouterEB\Obj\" -e --no_code_motion --debug   /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\"  /
//                          -I "C:\Users\Administrator\Desktop\TENZ×é²¥       /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \Source\" -I "C:\Users\Administrator\Desktop\TENZ /
//                          ×é²¥ ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530 /
//                          DB\..\..\..\ZMain\TI2530DB\" -I                   /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\hal\include\" -I          /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\hal\target\CC2530EB\" -I  /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\include\" -I          /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\high_level\" -I       /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\low_level\srf04\" -I  /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\low_level\srf04\singl /
//                          e_chip\" -I "C:\Users\Administrator\Desktop\TENZ× /
//                          é²¥ ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\Components\mt\" -I               /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\osal\include\" -I         /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\services\saddr\" -I       /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\services\sdata\" -I       /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\stack\af\" -I             /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\stack\nwk\" -I            /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\stack\sapi\" -I           /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\stack\sec\" -I            /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\stack\sys\" -I            /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\stack\zdo\" -I            /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\zmac\" -I                 /
//                          "C:\Users\Administrator\Desktop\TENZ×é²¥          /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\Components\zmac\f8w\" -Ohz           /
//    List file          =  C:\Users\Administrator\Desktop\TENZ×é²¥           /
//                          ¸Ä2\Projects\zstack\Samples\SampleApp\CC2530DB\Ro /
//                          uterEB\List\PM25.s51                              /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME PM25

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_ADD
        EXTERN ?FLT_DIV
        EXTERN ?FLT_MUL
        EXTERN ?INTERRUPT_ENTER_XSP
        EXTERN ?INTERRUPT_LEAVE_XSP
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_Z

        PUBLIC ??InitClock?relay
        FUNCTION ??InitClock?relay,0203H
        PUBLIC ??InitUART?relay
        FUNCTION ??InitUART?relay,0203H
        PUBLIC ??Init_capture_Gpio?relay
        FUNCTION ??Init_capture_Gpio?relay,0203H
        PUBLIC ??PM2_5Init?relay
        FUNCTION ??PM2_5Init?relay,0203H
        PUBLIC ??T1_Capture_r_f_init?relay
        FUNCTION ??T1_Capture_r_f_init?relay,0203H
        PUBWEAK `??T1_ISR??INTVEC 75`
        PUBLIC ??T1_init3?relay
        FUNCTION ??T1_init3?relay,0203H
        PUBWEAK `??T3_ISR??INTVEC 91`
        PUBLIC ??T3init?relay
        FUNCTION ??T3init?relay,0203H
        PUBWEAK CLKCONCMD
        PUBWEAK CLKCONSTA
        PUBWEAK IP0
        PUBWEAK IP1
        PUBLIC InitClock
        FUNCTION InitClock,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC InitUART
        FUNCTION InitUART,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC Init_capture_Gpio
        FUNCTION Init_capture_Gpio,0201H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK P0DIR
        PUBWEAK P0IFG
        PUBWEAK P0SEL
        PUBWEAK P2DIR
        PUBWEAK PERCFG
        PUBLIC PM2_5Init
        FUNCTION PM2_5Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC PM_data
        PUBWEAK T1CCTL2
        PUBWEAK T1STAT
        PUBLIC T1_Capture_r_f_init
        FUNCTION T1_Capture_r_f_init,021201H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC T1_ISR
        FUNCTION T1_ISR,021233H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC T1_init3
        FUNCTION T1_init3,0201H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK T3CTL
        PUBLIC T3_ISR
        FUNCTION T3_ISR,0233H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC T3init
        FUNCTION T3init,0201H
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK U0BAUD
        PUBWEAK U0CSR
        PUBWEAK U0GCR
        PUBWEAK _A_IEN0
        PUBWEAK _A_IEN1
        PUBWEAK _A_IRCON
        PUBWEAK _A_IRCON2
        PUBWEAK _A_P0
        PUBWEAK __Constant_0
        PUBWEAK __Constant_3f800000
        PUBWEAK __Constant_4003126f
        PUBWEAK __Constant_40a00000
        PUBWEAK __Constant_c0000000
        PUBLIC count
        PUBLIC count_aver
        PUBLIC countsum
        PUBLIC i
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
sprintf             SYMBOL "sprintf"
??sprintf?relay     SYMBOL "?relay", sprintf
InitClock           SYMBOL "InitClock"
??InitClock?relay   SYMBOL "?relay", InitClock
InitUART            SYMBOL "InitUART"
??InitUART?relay    SYMBOL "?relay", InitUART
Init_capture_Gpio   SYMBOL "Init_capture_Gpio"
??Init_capture_Gpio?relay SYMBOL "?relay", Init_capture_Gpio
PM2_5Init           SYMBOL "PM2_5Init"
??PM2_5Init?relay   SYMBOL "?relay", PM2_5Init
T1_Capture_r_f_init SYMBOL "T1_Capture_r_f_init"
??T1_Capture_r_f_init?relay SYMBOL "?relay", T1_Capture_r_f_init
T1_ISR              SYMBOL "T1_ISR"
`??T1_ISR??INTVEC 75` SYMBOL "??INTVEC 75", T1_ISR
T1_init3            SYMBOL "T1_init3"
??T1_init3?relay    SYMBOL "?relay", T1_init3
T3_ISR              SYMBOL "T3_ISR"
`??T3_ISR??INTVEC 91` SYMBOL "??INTVEC 91", T3_ISR
T3init              SYMBOL "T3init"
??T3init?relay      SYMBOL "?relay", T3init

        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??sprintf?relay
        FUNCTION ??sprintf?relay,00H

// C:\Users\Administrator\Desktop\TENZ×é²¥ ¸Ä2\Projects\zstack\Samples\SampleApp\Source\PM25.c
//    1 #include <PM25.h>

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,086H
// unsigned char volatile __sfr U0CSR
U0CSR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,089H
// unsigned char volatile __sfr P0IFG
P0IFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,09eH
// unsigned char volatile __sfr CLKCONSTA
CLKCONSTA:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a9H
// unsigned char volatile __sfr IP0
IP0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0afH
// unsigned char volatile __sfr T1STAT
T1STAT:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b8H
// union <unnamed> volatile __sfr _A_IEN1
_A_IEN1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b9H
// unsigned char volatile __sfr IP1
IP1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c0H
// union <unnamed> volatile __sfr _A_IRCON
_A_IRCON:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c2H
// unsigned char volatile __sfr U0BAUD
U0BAUD:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c5H
// unsigned char volatile __sfr U0GCR
U0GCR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c6H
// unsigned char volatile __sfr CLKCONCMD
CLKCONCMD:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0cbH
// unsigned char volatile __sfr T3CTL
T3CTL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e7H
// unsigned char volatile __sfr T1CCTL2
T1CCTL2:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e8H
// union <unnamed> volatile __sfr _A_IRCON2
_A_IRCON2:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f1H
// unsigned char volatile __sfr PERCFG
PERCFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0ffH
// unsigned char volatile __sfr P2DIR
P2DIR:
        DATA8
        DS 1
//    2 #include <string.h>
//    3 #include <stdio.h>
//    4 typedef unsigned char   uint8;
//    5 #define uint unsigned int 
//    6 #define uchar unsigned char

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    7 uint8 PM_data[6];
PM_data:
        DS 6
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    8 uchar i=0;
i:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//    9 float count=0;
count:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   10 float countsum=0;
countsum:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   11 float count_aver=0;
count_aver:
        DS 4
        REQUIRE __INIT_XDATA_Z
//   12 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   13 void T3init()
T3init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function T3init
        CODE
//   14 { 
        ; Saved register size: 0
        ; Auto size: 0
//   15   T3CTL |= 0x08 ;          //¿ªÒç³öÖÐ¶Ï     
        ORL     0xcb,#0x8
//   16   T3IE = 1;                //¿ª×ÜÖÐ¶ÏºÍT3ÖÐ¶Ï
        SETB    0xb8.3
//   17   T3CTL |= 0xE0;           //128·ÖÆµ,128/16000000*N=0.5S,N=62500
        ORL     0xcb,#0xe0
//   18   T3CTL &= ~0x03;          //×Ô¶¯ÖØ×° 00£­>0xff  62500/255=245(´Î)
        ANL     0xcb,#0xfc
//   19   T3CTL |= 0x10;           //Æô¶¯
        ORL     0xcb,#0x10
        CFI EndBlock cfiBlock0
//   20   EA = 1;                  //¿ª×ÜÖÐ¶Ï,Ò»´ÎÖÐ¶Ï¼ÆÊ±0.002048Ãë
        REQUIRE ?Subroutine1
        REQUIRE T3CTL
        REQUIRE _A_IEN1
        REQUIRE _A_IEN0
        ; // Fall through to label ?Subroutine1
//   21 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        SETB    0xa8.7
        LJMP    ?BRET
        CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   22 void InitClock(void)
InitClock:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function InitClock
        CODE
//   23 {   
        ; Saved register size: 0
        ; Auto size: 0
//   24     CLKCONCMD &= ~0x40;              //ÉèÖÃÏµÍ³Ê±ÖÓÔ´Îª 32MHZ¾§Õñ
        ANL     0xc6,#0xbf
//   25     while(CLKCONSTA & 0x40);         //µÈ´ý¾§ÕñÎÈ¶¨ 
??InitClock_0:
        MOV     A,0x9e
        MOV     C,0xE0 /* A   */.6
        JC      ??InitClock_0
//   26     CLKCONCMD &= ~0x47;              //ÉèÖÃÏµÍ³Ö÷Ê±ÖÓÆµÂÊÎª 32MHZ
        ANL     0xc6,#0xb8
//   27 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
        REQUIRE CLKCONCMD
        REQUIRE CLKCONSTA
//   28 
//   29 
//   30 /****************************************************************************
//   31 * Ãû    ³Æ: InitUart()
//   32 * ¹¦    ÄÜ: ´®¿Ú³õÊ¼»¯º¯Êý
//   33 * Èë¿Ú²ÎÊý: ÎÞ
//   34 * ³ö¿Ú²ÎÊý: ÎÞ
//   35 ****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   36 void InitUART(void)
InitUART:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function InitUART
        CODE
//   37 {
        ; Saved register size: 0
        ; Auto size: 0
//   38     /*PERCFG = 0x00;                   //Î»ÖÃ1 P0¿Ú
//   39     P0SEL = 0x3C;                    //P0ÓÃ×÷´®¿Ú
//   40     
//   41     P2DIR &= ~0xC0;                  //P0ÓÅÏÈ×÷ÎªUART0    
//   42     U0CSR |= 0x80;                   //´®¿ÚÉèÖÃÎªUART·½Ê½
//   43     U0GCR |= 11;				
//   44     U0BAUD |= 216;                   //²¨ÌØÂÊÉèÎª115200
//   45     
//   46     UTX0IF = 1;                      //UART0 TXÖÐ¶Ï±êÖ¾³õÊ¼ÖÃÎ»1  
//   47     U0CSR |= 0x40;                   //ÔÊÐí½ÓÊÕ
//   48     IEN0 |= 0x84;                    //¿ª×ÜÖÐ¶Ï£¬½ÓÊÕÖÐ¶Ï*/
//   49     
//   50     //**PERCFG &= 0xfe;           //ÍâÉè¿ØÖÆ¼Ä´æÆ÷ USART 0µÄIOÎ»ÖÃ:0ÎªP0¿ÚÎ»ÖÃ1 
//   51     PERCFG =0xbe;//¶¨Ê±Æ÷1±¸ÓÃÎ»ÖÃ1£¬¶¨Ê±Æ÷1±¸ÓÃÎ»ÖÃ1,UART0±¸ÓÃÎ»ÖÃ1
        MOV     0xf1,#-0x42
//   52     P0SEL |= 0x0c;            //P0_2,P0_3ÓÃ×÷´®¿Ú£¨ÍâÉè¹¦ÄÜ£©
        ORL     0xf3,#0xc
//   53     P2DIR &= ~0xC0;          //P0ÓÅÏÈ×÷ÎªUART0
        ANL     0xff,#0x3f
//   54     
//   55     U0CSR |= 0x80;           //ÉèÖÃÎªUART·½Ê½
        ORL     0x86,#0x80
//   56     U0GCR |= 11;				       
        ORL     0xc5,#0xb
//   57     U0BAUD |= 216;           //²¨ÌØÂÊÉèÎª115200
        ORL     0xc2,#0xd8
//   58     UTX0IF = 0;              //UART0 TXÖÐ¶Ï±êÖ¾³õÊ¼ÖÃÎ»0
        CLR     0xe8.1
//   59     U0CSR |= 0x40;           //ÔÊÐí½ÓÊÕ 
        ORL     0x86,#0x40
//   60     IEN0 |= 0x84;            //¿ª×ÜÖÐ¶ÏÔÊÐí½ÓÊÕÖÐ¶Ï 
        ORL     0xa8,#0x84
//   61 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock3
        REQUIRE PERCFG
        REQUIRE P0SEL
        REQUIRE P2DIR
        REQUIRE U0CSR
        REQUIRE U0GCR
        REQUIRE U0BAUD
        REQUIRE _A_IRCON2
        REQUIRE _A_IEN0
//   62 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   63 void Init_capture_Gpio()
Init_capture_Gpio:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function Init_capture_Gpio
        CODE
//   64 {
        ; Saved register size: 0
        ; Auto size: 0
//   65   P0SEL |= (1<<4);//P0_4¸´ÓÃ¹¦ÄÜ
        ORL     0xf3,#0x10
//   66   P0DIR &=~(1<<4);//ÉèÖÃGPIOÎªÊäÈë
        ANL     0xfd,#0xef
//   67  // P0_4=0;
//   68   //P2INP |=0x20;//P0¶Ë¿ÚÈ«²¿Òý½ÅÏÂÀ­
//   69  // P0INP=0xff;//P0¶Ë¿ÚÈ«²¿Òý½ÅÈýÌ¬
//   70   //**  PERCFG &=0xbf;//¶¨Ê±Æ÷1±¸ÓÃÎ»ÖÃ1
//   71   PERCFG =0xbe;//¶¨Ê±Æ÷1±¸ÓÃÎ»ÖÃ1,UART0±¸ÓÃÎ»ÖÃ1
        MOV     0xf1,#-0x42
//   72   //P2DIR |=0xc0;//¶¨Ê±Æ÷1Í¨µÀ2ÓÅÏÈ  *****
//   73   P2DIR &= ~0xC0;          //P0ÓÅÏÈ×÷ÎªUART0  ****
        ANL     0xff,#0x3f
//   74 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock4
        REQUIRE P0SEL
        REQUIRE P0DIR
        REQUIRE PERCFG
        REQUIRE P2DIR
//   75 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   76 void T1_init3()//ÅäÖÃ¶¨Ê±Æ÷1ÎªËùÓÐÑØ´¥·¢
T1_init3:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function T1_init3
        CODE
//   77 {
        ; Saved register size: 0
        ; Auto size: 0
//   78 //  T1CTL=0x0d;
//   79   T1CCTL2 = 0x43;//¿ªÖÐ¶Ï£¬²¢ÉèÖÃËùÓÐÑØ²¶»ñ
        MOV     0xe7,#0x43
//   80   //T1CCTL2 = 0x41;//¿ªÖÐ¶Ï£¬²¢ÉèÖÃÉÏÉý²¶»ñ
//   81  // PICTL &=0xfe;//P0_0-P0_7ÉÏÉýÑØ´¥·¢
//   82  // PICTL=0xfe;//P0_0-P0_7ÉÏÉýÑØ´¥·¢
//   83  // PICTL |=0x01;//P0_0-P0_7ÏÂ½µÑØ´¥·¢
//   84   IRCON=0;//Çå³ýÖÐ¶Ï±êÖ¾
        MOV     0xc0,#0x0
//   85   P0IFG =0x00;//Çå³ýÖÐ¶Ï±êÖ¾
        MOV     0x89,#0x0
//   86 
//   87   T1IE=1;//Ê¹ÄÜ¶¨Ê±Æ÷1ÖÐ¶Ï  
        SETB    0xb8.1
//   88   EA=1;
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock5
        REQUIRE T1CCTL2
        REQUIRE _A_IRCON
        REQUIRE P0IFG
        REQUIRE _A_IEN1
        REQUIRE _A_IEN0
//   89 }
//   90 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   91 void T1_Capture_r_f_init()
T1_Capture_r_f_init:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function T1_Capture_r_f_init
        CODE
//   92 {
        FUNCALL T1_Capture_r_f_init, Init_capture_Gpio
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL T1_Capture_r_f_init, T1_init3
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   93   Init_capture_Gpio();
        ; Setup parameters for call to function Init_capture_Gpio
        LCALL   ??Init_capture_Gpio?relay
//   94   T1_init3();
        ; Setup parameters for call to function T1_init3
        LCALL   ??T1_init3?relay
        CFI EndBlock cfiBlock6
//   95 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock7
//   96 
//   97 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   98 void PM2_5Init()
PM2_5Init:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function PM2_5Init
        CODE
//   99 { 
        FUNCALL PM2_5Init, Init_capture_Gpio
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL PM2_5Init, T1_init3
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  100  // InitClock(); //Ê±ÖÓÖ÷ÆµÂÊÉèÖÃÎª32M
//  101   //InitUART();//³õÊ¼»¯´®¿Ú£¬ÓÃÒÔ·¢ËÍÊý¾Ý
//  102   CLKCONCMD |= (1<<3);          // OKC£º¶¨Ê±Æ÷1ÆµÂÊÎª16MHZ
        ORL     0xc6,#0x8
//  103   CLKCONCMD &= ~(3<<4);
        ANL     0xc6,#0xcf
//  104   T1_Capture_r_f_init();//ËùÓÐÑØ´¥·¢
        ; Setup parameters for call to function Init_capture_Gpio
        LCALL   ??Init_capture_Gpio?relay
        ; Setup parameters for call to function T1_init3
        LCALL   ??T1_init3?relay
//  105   IP1 |= (1<<1);              // ÉèÖÃ¶¨Ê±Æ÷1ÎªµÚ¶þ¸ßÖÐ¶ÏÓÅÏÈ¼¶
        ORL     0xb9,#0x2
//  106   IP0 |= (1<<1);
        ORL     0xa9,#0x2
//  107   IP1 |= (1<<3);              // ÉèÖÃ¶¨Ê±Æ÷3ÎªµÚÒ»¸ßÖÐ¶ÏÓÅÏÈ¼¶
        ORL     0xb9,#0x8
//  108   IP0 |= (1<<3);
        ORL     0xa9,#0x8
//  109   //while(1);
//  110 }
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock8
        REQUIRE CLKCONCMD
        REQUIRE IP1
        REQUIRE IP0
//  111 
//  112 
//  113 
//  114 #pragma vector = T1_VECTOR 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//  115 __interrupt void T1_ISR(void)
T1_ISR:
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function T1_ISR
        CODE
//  116 {
        FUNCALL T1_ISR, T3init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL T1_ISR, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0x15
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 0
//  117   EA=0;
        CLR     0xa8.7
//  118   T1IF=0;
        CLR     0xc0.1
//  119   if(T1STAT & (1<<2))//Í¨µÀ2ÖÐ¶Ï±êÖ¾
        MOV     A,0xaf
        MOV     C,0xE0 /* A   */.2
        JC      $+5
        LJMP    ??T1_ISR_0
//  120   {
//  121     if(P0_4==1)
        MOV     C,0x80.4
        JNC     ??T1_ISR_1
//  122     {
//  123       //EA=0;
//  124      //** LED1=0;
//  125     //  T1IF=0;
//  126       T1STAT=0;
        MOV     0xaf,#0x0
//  127       P0IFG =0x00;//Çå³ýÖÐ¶Ï±êÖ¾
        MOV     0x89,#0x0
//  128      // EA=1;
//  129      // InitUART();
//  130     //**  UartSendString(start,5);
//  131       count=0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPTR,#count
        LCALL   ?XSTORE_R2345
//  132       T3init();//Æô¶¯¶¨Ê±Æ÷3¼ÆÊ±
        ; Setup parameters for call to function T3init
        LCALL   ??T3init?relay
//  133     //  T4_int();
//  134      //*** T1_Capture_fall_init();
//  135     }
//  136     if(P0_4==0)
??T1_ISR_1:
        MOV     C,0x80.4
        JNC     $+5
        LJMP    ??T1_ISR_0
//  137     {
//  138       
//  139     //  EA=0;
//  140     //  LED1=1;
//  141     //  T1IF=0;
//  142       T1STAT=0;
        MOV     0xaf,#0x0
//  143       P0IFG =0x00;//Çå³ýÖÐ¶Ï±êÖ¾
        MOV     0x89,#0x0
//  144      // memset(PM_data, 0, 6);
//  145       count = count*2.048;
//  146       count=count-2;//µÃµ½PM2.5µÄÖµ
        MOV     DPTR,#count
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_4003126f
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_c0000000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#count
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  147      // count=0-0.0003*count*count+1.331*count-13.19;//ÄâºÏº¯Êý
//  148       countsum = count + countsum;
        MOV     DPTR,#count
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#countsum
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#countsum
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  149       i++;
        MOV     DPTR,#i
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
//  150       if(i==5)
        XRL     A,#0x5
        JNZ     ??T1_ISR_2
//  151       {
//  152         i=0;
        CLR     A
        MOVX    @DPTR,A
//  153         count_aver=countsum/5;
        MOV     DPTR,#countsum
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_40a00000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     DPTR,#count_aver
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  154         sprintf(PM_data,"%.2f", count);//½«¸¡µãÊý×ª³É×Ö·û´®
        ; Setup parameters for call to function sprintf
        MOV     DPTR,#count
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#`?<Constant "%.2f">` & 0xff
        MOV     R5,#(`?<Constant "%.2f">` >> 8) & 0xff
        MOV     R2,#PM_data & 0xff
        MOV     R3,#(PM_data >> 8) & 0xff
        LCALL   ??sprintf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 21)
//  155        //** SampleApp_Send_P2P_Message();
//  156         countsum=0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPTR,#countsum
        LCALL   ?XSTORE_R2345
//  157         count_aver=0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPTR,#count_aver
        LCALL   ?XSTORE_R2345
//  158       }
//  159       T3CTL |=0x04;//Çå³ý¶¨Ê±Æ÷3µÄ¼ÆÊýÆ÷
??T1_ISR_2:
        ORL     0xcb,#0x4
//  160       count=0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPTR,#count
        LCALL   ?XSTORE_R2345
//  161     }
//  162   }
//  163   EA=1;
??T1_ISR_0:
        SETB    0xa8.7
//  164   T1STAT &= ~0x3f;             // Çå¿Õ¶¨Ê±Æ÷ÖÐ¶Ï×´Ì¬Î»
        ANL     0xaf,#0xc0
        CFI EndBlock cfiBlock9
//  165 }
        REQUIRE ?Subroutine2
        REQUIRE _A_IEN0
        REQUIRE _A_IRCON
        REQUIRE T1STAT
        REQUIRE _A_P0
        REQUIRE P0IFG
        REQUIRE T3CTL
        ; // Fall through to label ?Subroutine2

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        CFI CFA_SP SP+-3
        CFI CFA_XSP16 add(XSP16, 21)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI A Frame(CFA_SP, 3)
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        MOV     R7,#0x8
        LJMP    ?INTERRUPT_LEAVE_XSP
        CFI EndBlock cfiBlock10
//  166 
//  167 
//  168 //¶¨Ê±Æ÷T3ÖÐ¶Ï´¦Àíº¯Êý
//  169 #pragma vector = T3_VECTOR 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//  170 __interrupt void T3_ISR(void) 
T3_ISR:
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function T3_ISR
        CODE
//  171 { 
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0x15
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 0
//  172     T3IF = 0;            //ÇåÖÐ¶Ï±êÖ¾, Ò²¿ÉÓÉÓ²¼þ×Ô¶¯Íê³É 
        CLR     0xc0.3
//  173     count++;
        MOV     DPTR,#count
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_3f800000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#count
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  174 }
        SJMP    ?Subroutine2
        CFI EndBlock cfiBlock11
        REQUIRE _A_IRCON

        COMMON INTVEC:CODE:ROOT(0)
        ORG 75
`??T1_ISR??INTVEC 75`:
        LJMP       (T1_ISR)

        COMMON INTVEC:CODE:ROOT(0)
        ORG 91
`??T3_ISR??INTVEC 91`:
        LJMP       (T3_ISR)

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??T3init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    T3init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??InitClock?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    InitClock

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??InitUART?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    InitUART

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Init_capture_Gpio?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Init_capture_Gpio

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??T1_init3?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    T1_init3

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??T1_Capture_r_f_init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    T1_Capture_r_f_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??PM2_5Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    PM2_5Init

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%.2f">`:
        DB "%.2f"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_4003126f:
        DD 4003126FH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c0000000:
        DD 0C0000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_40a00000:
        DD 40A00000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f800000:
        DD 3F800000H

        END
// 
// 138 bytes in segment BANKED_CODE
//  42 bytes in segment BANK_RELAYS
//   6 bytes in segment INTVEC
// 291 bytes in segment NEAR_CODE
//  20 bytes in segment SFR_AN
//  25 bytes in segment XDATA_ROM_C
//  19 bytes in segment XDATA_Z
// 
// 471 bytes of CODE  memory (+  6 bytes shared)
//   5 bytes of CONST memory (+ 20 bytes shared)
//   0 bytes of DATA  memory (+ 20 bytes shared)
//  19 bytes of XDATA memory
//
//Errors: none
//Warnings: 1
