###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         22/Sep/2017  02:35:51 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\Administrator\Desktop\TENZ组播            #
#                          改2\Projects\zstack\Samples\SampleApp\Source\PM25. #
#                          c                                                  #
#    Command line       =  -f "C:\Users\Administrator\Desktop\TENZ组播        #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\Tools\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ    #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO   #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF00                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Users\Administrator\Des #
#                          ktop\TENZ组播 改2\Projects\zstack\Samples\SampleAp #
#                          p\Source\PM25.c" -D ZTOOL_P1 -D MT_TASK -D         #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                      #
#                          xLCD_SUPPORTED=DEBUG -D HAL_ADC -D                 #
#                          Channel_1_For_TGS813 -lC                           #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\Rou #
#                          terEB\List\" -lA "C:\Users\Administrator\Desktop\T #
#                          ENZ组播 改2\Projects\zstack\Samples\SampleApp\CC25 #
#                          30DB\RouterEB\List\" --diag_suppress Pe001,Pa010   #
#                          -o "C:\Users\Administrator\Desktop\TENZ组播        #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\Rou #
#                          terEB\Obj\" -e --no_code_motion --debug            #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Users\Administrator\De #
#                          sktop\TENZ组播 改2\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\" -I "C:\Users\Administrator\Desktop\T #
#                          ENZ组播 改2\Projects\zstack\Samples\SampleApp\CC25 #
#                          30DB\..\Source\" -I "C:\Users\Administrator\Deskto #
#                          p\TENZ组播 改2\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\ZMain\TI2530DB\" -I               #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\hal\include\" -I            #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\hal\target\CC2530EB\" -I    #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\mac\include\" -I            #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\mac\high_level\" -I         #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\mac\low_level\srf04\" -I    #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\mac\low_level\srf04\single_ #
#                          chip\" -I "C:\Users\Administrator\Desktop\TENZ组播 #
#                           改2\Projects\zstack\Samples\SampleApp\CC2530DB\.. #
#                          \..\..\..\..\Components\mt\" -I                    #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\osal\include\" -I           #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\services\saddr\" -I         #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\services\sdata\" -I         #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\stack\af\" -I               #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\stack\nwk\" -I              #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\stack\sapi\" -I             #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\stack\sec\" -I              #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\stack\sys\" -I              #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\stack\zdo\" -I              #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\zmac\" -I                   #
#                          "C:\Users\Administrator\Desktop\TENZ组播           #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\zmac\f8w\" -Ohz             #
#    List file          =  C:\Users\Administrator\Desktop\TENZ组播            #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\Rou #
#                          terEB\List\PM25.lst                                #
#    Object file        =  C:\Users\Administrator\Desktop\TENZ组播            #
#                          改2\Projects\zstack\Samples\SampleApp\CC2530DB\Rou #
#                          terEB\Obj\PM25.r51                                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\TENZ组播 改2\Projects\zstack\Samples\SampleApp\Source\PM25.c
      1          #include <PM25.h>

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x86
   \   unsigned char volatile __sfr U0CSR
   \                     U0CSR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x89
   \   unsigned char volatile __sfr P0IFG
   \                     P0IFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x9e
   \   unsigned char volatile __sfr CLKCONSTA
   \                     CLKCONSTA:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa9
   \   unsigned char volatile __sfr IP0
   \                     IP0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xaf
   \   unsigned char volatile __sfr T1STAT
   \                     T1STAT:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb8
   \   union <unnamed> volatile __sfr _A_IEN1
   \                     _A_IEN1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb9
   \   unsigned char volatile __sfr IP1
   \                     IP1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc0
   \   union <unnamed> volatile __sfr _A_IRCON
   \                     _A_IRCON:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc2
   \   unsigned char volatile __sfr U0BAUD
   \                     U0BAUD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc5
   \   unsigned char volatile __sfr U0GCR
   \                     U0GCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc6
   \   unsigned char volatile __sfr CLKCONCMD
   \                     CLKCONCMD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xcb
   \   unsigned char volatile __sfr T3CTL
   \                     T3CTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe7
   \   unsigned char volatile __sfr T1CCTL2
   \                     T1CCTL2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe8
   \   union <unnamed> volatile __sfr _A_IRCON2
   \                     _A_IRCON2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf1
   \   unsigned char volatile __sfr PERCFG
   \                     PERCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
      2          #include <string.h>
      3          #include <stdio.h>
      4          typedef unsigned char   uint8;
      5          #define uint unsigned int 
      6          #define uchar unsigned char

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      7          uint8 PM_data[6];
   \                     PM_data:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      8          uchar i=0;
   \                     i:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      9          float count=0;
   \                     count:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     10          float countsum=0;
   \                     countsum:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     11          float count_aver=0;
   \                     count_aver:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
     12          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     13          void T3init()
   \                     T3init:
     14          { 
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     15            T3CTL |= 0x08 ;          //开溢出中断     
   \   000000   43CB08       ORL     0xcb,#0x8
     16            T3IE = 1;                //开总中断和T3中断
   \   000003   D2BB         SETB    0xb8.3
     17            T3CTL |= 0xE0;           //128分频,128/16000000*N=0.5S,N=62500
   \   000005   43CBE0       ORL     0xcb,#0xe0
     18            T3CTL &= ~0x03;          //自动重装 00－>0xff  62500/255=245(次)
   \   000008   53CBFC       ANL     0xcb,#0xfc
     19            T3CTL |= 0x10;           //启动
   \   00000B   43CB10       ORL     0xcb,#0x10
     20            EA = 1;                  //开总中断,一次中断计时0.002048秒
   \   00000E                REQUIRE ?Subroutine1
   \   00000E                REQUIRE T3CTL
   \   00000E                REQUIRE _A_IEN1
   \   00000E                REQUIRE _A_IEN0
   \   00000E                ; // Fall through to label ?Subroutine1
     21          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D2AF         SETB    0xa8.7
   \   000002   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     22          void InitClock(void)
   \                     InitClock:
     23          {   
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     24              CLKCONCMD &= ~0x40;              //设置系统时钟源为 32MHZ晶振
   \   000000   53C6BF       ANL     0xc6,#0xbf
     25              while(CLKCONSTA & 0x40);         //等待晶振稳定 
   \                     ??InitClock_0:
   \   000003   E59E         MOV     A,0x9e
   \   000005   A2E6         MOV     C,0xE0 /* A   */.6
   \   000007   40FA         JC      ??InitClock_0
     26              CLKCONCMD &= ~0x47;              //设置系统主时钟频率为 32MHZ
   \   000009   53C6B8       ANL     0xc6,#0xb8
     27          }
   \   00000C   02....       LJMP    ?BRET
   \   00000F                REQUIRE CLKCONCMD
   \   00000F                REQUIRE CLKCONSTA
     28          
     29          
     30          /****************************************************************************
     31          * 名    称: InitUart()
     32          * 功    能: 串口初始化函数
     33          * 入口参数: 无
     34          * 出口参数: 无
     35          ****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     36          void InitUART(void)
   \                     InitUART:
     37          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     38              /*PERCFG = 0x00;                   //位置1 P0口
     39              P0SEL = 0x3C;                    //P0用作串口
     40              
     41              P2DIR &= ~0xC0;                  //P0优先作为UART0    
     42              U0CSR |= 0x80;                   //串口设置为UART方式
     43              U0GCR |= 11;				
     44              U0BAUD |= 216;                   //波特率设为115200
     45              
     46              UTX0IF = 1;                      //UART0 TX中断标志初始置位1  
     47              U0CSR |= 0x40;                   //允许接收
     48              IEN0 |= 0x84;                    //开总中断，接收中断*/
     49              
     50              //**PERCFG &= 0xfe;           //外设控制寄存器 USART 0的IO位置:0为P0口位置1 
     51              PERCFG =0xbe;//定时器1备用位置1，定时器1备用位置1,UART0备用位置1
   \   000000   75F1BE       MOV     0xf1,#-0x42
     52              P0SEL |= 0x0c;            //P0_2,P0_3用作串口（外设功能）
   \   000003   43F30C       ORL     0xf3,#0xc
     53              P2DIR &= ~0xC0;          //P0优先作为UART0
   \   000006   53FF3F       ANL     0xff,#0x3f
     54              
     55              U0CSR |= 0x80;           //设置为UART方式
   \   000009   438680       ORL     0x86,#0x80
     56              U0GCR |= 11;				       
   \   00000C   43C50B       ORL     0xc5,#0xb
     57              U0BAUD |= 216;           //波特率设为115200
   \   00000F   43C2D8       ORL     0xc2,#0xd8
     58              UTX0IF = 0;              //UART0 TX中断标志初始置位0
   \   000012   C2E9         CLR     0xe8.1
     59              U0CSR |= 0x40;           //允许接收 
   \   000014   438640       ORL     0x86,#0x40
     60              IEN0 |= 0x84;            //开总中断允许接收中断 
   \   000017   43A884       ORL     0xa8,#0x84
     61          }
   \   00001A   02....       LJMP    ?BRET
   \   00001D                REQUIRE PERCFG
   \   00001D                REQUIRE P0SEL
   \   00001D                REQUIRE P2DIR
   \   00001D                REQUIRE U0CSR
   \   00001D                REQUIRE U0GCR
   \   00001D                REQUIRE U0BAUD
   \   00001D                REQUIRE _A_IRCON2
   \   00001D                REQUIRE _A_IEN0
     62          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     63          void Init_capture_Gpio()
   \                     Init_capture_Gpio:
     64          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     65            P0SEL |= (1<<4);//P0_4复用功能
   \   000000   43F310       ORL     0xf3,#0x10
     66            P0DIR &=~(1<<4);//设置GPIO为输入
   \   000003   53FDEF       ANL     0xfd,#0xef
     67           // P0_4=0;
     68            //P2INP |=0x20;//P0端口全部引脚下拉
     69           // P0INP=0xff;//P0端口全部引脚三态
     70            //**  PERCFG &=0xbf;//定时器1备用位置1
     71            PERCFG =0xbe;//定时器1备用位置1,UART0备用位置1
   \   000006   75F1BE       MOV     0xf1,#-0x42
     72            //P2DIR |=0xc0;//定时器1通道2优先  *****
     73            P2DIR &= ~0xC0;          //P0优先作为UART0  ****
   \   000009   53FF3F       ANL     0xff,#0x3f
     74          }
   \   00000C   02....       LJMP    ?BRET
   \   00000F                REQUIRE P0SEL
   \   00000F                REQUIRE P0DIR
   \   00000F                REQUIRE PERCFG
   \   00000F                REQUIRE P2DIR
     75          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     76          void T1_init3()//配置定时器1为所有沿触发
   \                     T1_init3:
     77          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     78          //  T1CTL=0x0d;
     79            T1CCTL2 = 0x43;//开中断，并设置所有沿捕获
   \   000000   75E743       MOV     0xe7,#0x43
     80            //T1CCTL2 = 0x41;//开中断，并设置上升捕获
     81           // PICTL &=0xfe;//P0_0-P0_7上升沿触发
     82           // PICTL=0xfe;//P0_0-P0_7上升沿触发
     83           // PICTL |=0x01;//P0_0-P0_7下降沿触发
     84            IRCON=0;//清除中断标志
   \   000003   75C000       MOV     0xc0,#0x0
     85            P0IFG =0x00;//清除中断标志
   \   000006   758900       MOV     0x89,#0x0
     86          
     87            T1IE=1;//使能定时器1中断  
   \   000009   D2B9         SETB    0xb8.1
     88            EA=1;
   \   00000B   80..         SJMP    ?Subroutine1
   \   00000D                REQUIRE T1CCTL2
   \   00000D                REQUIRE _A_IRCON
   \   00000D                REQUIRE P0IFG
   \   00000D                REQUIRE _A_IEN1
   \   00000D                REQUIRE _A_IEN0
     89          }
     90          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     91          void T1_Capture_r_f_init()
   \                     T1_Capture_r_f_init:
     92          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     93            Init_capture_Gpio();
   \   000004                ; Setup parameters for call to function Init_capture_Gpio
   \   000004   12....       LCALL   ??Init_capture_Gpio?relay
     94            T1_init3();
   \   000007                ; Setup parameters for call to function T1_init3
   \   000007   12....       LCALL   ??T1_init3?relay
     95          }
   \   00000A                REQUIRE ?Subroutine0
   \   00000A                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     96          
     97          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     98          void PM2_5Init()
   \                     PM2_5Init:
     99          { 
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    100           // InitClock(); //时钟主频率设置为32M
    101            //InitUART();//初始化串口，用以发送数据
    102            CLKCONCMD |= (1<<3);          // OKC：定时器1频率为16MHZ
   \   000004   43C608       ORL     0xc6,#0x8
    103            CLKCONCMD &= ~(3<<4);
   \   000007   53C6CF       ANL     0xc6,#0xcf
    104            T1_Capture_r_f_init();//所有沿触发
   \   00000A                ; Setup parameters for call to function Init_capture_Gpio
   \   00000A   12....       LCALL   ??Init_capture_Gpio?relay
   \   00000D                ; Setup parameters for call to function T1_init3
   \   00000D   12....       LCALL   ??T1_init3?relay
    105            IP1 |= (1<<1);              // 设置定时器1为第二高中断优先级
   \   000010   43B902       ORL     0xb9,#0x2
    106            IP0 |= (1<<1);
   \   000013   43A902       ORL     0xa9,#0x2
    107            IP1 |= (1<<3);              // 设置定时器3为第一高中断优先级
   \   000016   43B908       ORL     0xb9,#0x8
    108            IP0 |= (1<<3);
   \   000019   43A908       ORL     0xa9,#0x8
    109            //while(1);
    110          }
   \   00001C   80..         SJMP    ?Subroutine0
   \   00001E                REQUIRE CLKCONCMD
   \   00001E                REQUIRE IP1
   \   00001E                REQUIRE IP0
    111          
    112          
    113          
    114          #pragma vector = T1_VECTOR 

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    115          __interrupt void T1_ISR(void)
   \                     T1_ISR:
    116          {
   \   000000   C0E0         PUSH    A
   \   000002   74EB         MOV     A,#-0x15
   \   000004   12....       LCALL   ?INTERRUPT_ENTER_XSP
   \   000007                ; Saved register size: 21
   \   000007                ; Auto size: 0
    117            EA=0;
   \   000007   C2AF         CLR     0xa8.7
    118            T1IF=0;
   \   000009   C2C1         CLR     0xc0.1
    119            if(T1STAT & (1<<2))//通道2中断标志
   \   00000B   E5AF         MOV     A,0xaf
   \   00000D   A2E2         MOV     C,0xE0 /* A   */.2
   \   00000F   4003         JC      $+5
   \   000011   02....       LJMP    ??T1_ISR_0
    120            {
    121              if(P0_4==1)
   \   000014   A284         MOV     C,0x80.4
   \   000016   5015         JNC     ??T1_ISR_1
    122              {
    123                //EA=0;
    124               //** LED1=0;
    125              //  T1IF=0;
    126                T1STAT=0;
   \   000018   75AF00       MOV     0xaf,#0x0
    127                P0IFG =0x00;//清除中断标志
   \   00001B   758900       MOV     0x89,#0x0
    128               // EA=1;
    129               // InitUART();
    130              //**  UartSendString(start,5);
    131                count=0;
   \   00001E   90....       MOV     DPTR,#__Constant_0
   \   000021   12....       LCALL   ?XLOAD_R2345
   \   000024   90....       MOV     DPTR,#count
   \   000027   12....       LCALL   ?XSTORE_R2345
    132                T3init();//启动定时器3计时
   \   00002A                ; Setup parameters for call to function T3init
   \   00002A   12....       LCALL   ??T3init?relay
    133              //  T4_int();
    134               //*** T1_Capture_fall_init();
    135              }
    136              if(P0_4==0)
   \                     ??T1_ISR_1:
   \   00002D   A284         MOV     C,0x80.4
   \   00002F   5003         JNC     $+5
   \   000031   02....       LJMP    ??T1_ISR_0
    137              {
    138                
    139              //  EA=0;
    140              //  LED1=1;
    141              //  T1IF=0;
    142                T1STAT=0;
   \   000034   75AF00       MOV     0xaf,#0x0
    143                P0IFG =0x00;//清除中断标志
   \   000037   758900       MOV     0x89,#0x0
    144               // memset(PM_data, 0, 6);
    145                count = count*2.048;
    146                count=count-2;//得到PM2.5的值
   \   00003A   90....       MOV     DPTR,#count
   \   00003D   78..         MOV     R0,#?V0 + 0
   \   00003F   12....       LCALL   ?L_MOV_X
   \   000042   90....       MOV     DPTR,#__Constant_4003126f
   \   000045   78..         MOV     R0,#?V0 + 4
   \   000047   12....       LCALL   ?L_MOV_X
   \   00004A   78..         MOV     R0,#?V0 + 0
   \   00004C   79..         MOV     R1,#?V0 + 4
   \   00004E   12....       LCALL   ?FLT_MUL
   \   000051   90....       MOV     DPTR,#__Constant_c0000000
   \   000054   78..         MOV     R0,#?V0 + 4
   \   000056   12....       LCALL   ?L_MOV_X
   \   000059   78..         MOV     R0,#?V0 + 0
   \   00005B   79..         MOV     R1,#?V0 + 4
   \   00005D   12....       LCALL   ?FLT_ADD
   \   000060   90....       MOV     DPTR,#count
   \   000063   78..         MOV     R0,#?V0 + 0
   \   000065   12....       LCALL   ?L_MOV_TO_X
    147               // count=0-0.0003*count*count+1.331*count-13.19;//拟合函数
    148                countsum = count + countsum;
   \   000068   90....       MOV     DPTR,#count
   \   00006B   78..         MOV     R0,#?V0 + 0
   \   00006D   12....       LCALL   ?L_MOV_X
   \   000070   90....       MOV     DPTR,#countsum
   \   000073   78..         MOV     R0,#?V0 + 4
   \   000075   12....       LCALL   ?L_MOV_X
   \   000078   78..         MOV     R0,#?V0 + 0
   \   00007A   79..         MOV     R1,#?V0 + 4
   \   00007C   12....       LCALL   ?FLT_ADD
   \   00007F   90....       MOV     DPTR,#countsum
   \   000082   78..         MOV     R0,#?V0 + 0
   \   000084   12....       LCALL   ?L_MOV_TO_X
    149                i++;
   \   000087   90....       MOV     DPTR,#i
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   04           INC     A
   \   00008C   F0           MOVX    @DPTR,A
    150                if(i==5)
   \   00008D   6405         XRL     A,#0x5
   \   00008F   704F         JNZ     ??T1_ISR_2
    151                {
    152                  i=0;
   \   000091   E4           CLR     A
   \   000092   F0           MOVX    @DPTR,A
    153                  count_aver=countsum/5;
   \   000093   90....       MOV     DPTR,#countsum
   \   000096   78..         MOV     R0,#?V0 + 0
   \   000098   12....       LCALL   ?L_MOV_X
   \   00009B   90....       MOV     DPTR,#__Constant_40a00000
   \   00009E   78..         MOV     R0,#?V0 + 4
   \   0000A0   12....       LCALL   ?L_MOV_X
   \   0000A3   78..         MOV     R0,#?V0 + 0
   \   0000A5   79..         MOV     R1,#?V0 + 4
   \   0000A7   12....       LCALL   ?FLT_DIV
   \   0000AA   90....       MOV     DPTR,#count_aver
   \   0000AD   78..         MOV     R0,#?V0 + 0
   \   0000AF   12....       LCALL   ?L_MOV_TO_X
    154                  sprintf(PM_data,"%.2f", count);//将浮点数转成字符串
                                 ^
Warning[Pe167]: argument of type "uint8 *" is incompatible with parameter of
          type "char *"
   \   0000B2                ; Setup parameters for call to function sprintf
   \   0000B2   90....       MOV     DPTR,#count
   \   0000B5   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   0000B8   7C..         MOV     R4,#`?<Constant "%.2f">` & 0xff
   \   0000BA   7D..         MOV     R5,#(`?<Constant "%.2f">` >> 8) & 0xff
   \   0000BC   7A..         MOV     R2,#PM_data & 0xff
   \   0000BE   7B..         MOV     R3,#(PM_data >> 8) & 0xff
   \   0000C0   12....       LCALL   ??sprintf?relay
   \   0000C3   7404         MOV     A,#0x4
   \   0000C5   12....       LCALL   ?DEALLOC_XSTACK8
    155                 //** SampleApp_Send_P2P_Message();
    156                  countsum=0;
   \   0000C8   90....       MOV     DPTR,#__Constant_0
   \   0000CB   12....       LCALL   ?XLOAD_R2345
   \   0000CE   90....       MOV     DPTR,#countsum
   \   0000D1   12....       LCALL   ?XSTORE_R2345
    157                  count_aver=0;
   \   0000D4   90....       MOV     DPTR,#__Constant_0
   \   0000D7   12....       LCALL   ?XLOAD_R2345
   \   0000DA   90....       MOV     DPTR,#count_aver
   \   0000DD   12....       LCALL   ?XSTORE_R2345
    158                }
    159                T3CTL |=0x04;//清除定时器3的计数器
   \                     ??T1_ISR_2:
   \   0000E0   43CB04       ORL     0xcb,#0x4
    160                count=0;
   \   0000E3   90....       MOV     DPTR,#__Constant_0
   \   0000E6   12....       LCALL   ?XLOAD_R2345
   \   0000E9   90....       MOV     DPTR,#count
   \   0000EC   12....       LCALL   ?XSTORE_R2345
    161              }
    162            }
    163            EA=1;
   \                     ??T1_ISR_0:
   \   0000EF   D2AF         SETB    0xa8.7
    164            T1STAT &= ~0x3f;             // 清空定时器中断状态位
   \   0000F1   53AFC0       ANL     0xaf,#0xc0
    165          }
   \   0000F4                REQUIRE ?Subroutine2
   \   0000F4                REQUIRE _A_IEN0
   \   0000F4                REQUIRE _A_IRCON
   \   0000F4                REQUIRE T1STAT
   \   0000F4                REQUIRE _A_P0
   \   0000F4                REQUIRE P0IFG
   \   0000F4                REQUIRE T3CTL
   \   0000F4                ; // Fall through to label ?Subroutine2

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F08         MOV     R7,#0x8
   \   000002   02....       LJMP    ?INTERRUPT_LEAVE_XSP
    166          
    167          
    168          //定时器T3中断处理函数
    169          #pragma vector = T3_VECTOR 

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    170          __interrupt void T3_ISR(void) 
   \                     T3_ISR:
    171          { 
   \   000000   C0E0         PUSH    A
   \   000002   74EB         MOV     A,#-0x15
   \   000004   12....       LCALL   ?INTERRUPT_ENTER_XSP
   \   000007                ; Saved register size: 21
   \   000007                ; Auto size: 0
    172              T3IF = 0;            //清中断标志, 也可由硬件自动完成 
   \   000007   C2C3         CLR     0xc0.3
    173              count++;
   \   000009   90....       MOV     DPTR,#count
   \   00000C   78..         MOV     R0,#?V0 + 0
   \   00000E   12....       LCALL   ?L_MOV_X
   \   000011   90....       MOV     DPTR,#__Constant_3f800000
   \   000014   78..         MOV     R0,#?V0 + 4
   \   000016   12....       LCALL   ?L_MOV_X
   \   000019   78..         MOV     R0,#?V0 + 0
   \   00001B   79..         MOV     R1,#?V0 + 4
   \   00001D   12....       LCALL   ?FLT_ADD
   \   000020   90....       MOV     DPTR,#count
   \   000023   78..         MOV     R0,#?V0 + 0
   \   000025   12....       LCALL   ?L_MOV_TO_X
    174          }
   \   000028   80..         SJMP    ?Subroutine2
   \   00002A                REQUIRE _A_IRCON

   \                                 In  segment INTVEC, offset 0x4b, root
   \                     `??T1_ISR??INTVEC 75`:
   \   00004B   02....       LJMP       (T1_ISR)

   \                                 In  segment INTVEC, offset 0x5b, root
   \                     `??T3_ISR??INTVEC 91`:
   \   00005B   02....       LJMP       (T3_ISR)

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??T3init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    T3init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??InitClock?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    InitClock

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??InitUART?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    InitUART

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Init_capture_Gpio?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Init_capture_Gpio

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??T1_init3?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    T1_init3

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??T1_Capture_r_f_init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    T1_Capture_r_f_init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??PM2_5Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    PM2_5Init

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%.2f">`:
   \   000000   252E3266     DB "%.2f"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_0:
   \   000000   00000000     DD 0H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_4003126f:
   \   000000   6F120340     DD 4003126FH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c0000000:
   \   000000   000000C0     DD 0C0000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_40a00000:
   \   000000   0000A040     DD 40A00000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3f800000:
   \   000000   0000803F     DD 3F800000H

   Maximum stack usage in bytes:

     Function               ISTACK PSTACK XSTACK
     --------               ------ ------ ------
     InitClock                  0      0      0
     InitUART                   0      0      0
     Init_capture_Gpio          0      0      0
     PM2_5Init                  2      0      0
       -> Init_capture_Gpio     4      0      0
       -> T1_init3              4      0      0
     T1_Capture_r_f_init        2      0      0
       -> Init_capture_Gpio     4      0      0
       -> T1_init3              4      0      0
     T1_ISR                     0      0     25
       -> T3init                0      0     42
       -> sprintf               0      0     50
     T1_init3                   0      0      0
     T3_ISR                     0      0     21
     T3init                     0      0     21


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     _A_P0                          1
     U0CSR                          1
     P0IFG                          1
     CLKCONSTA                      1
     _A_IEN0                        1
     IP0                            1
     T1STAT                         1
     _A_IEN1                        1
     IP1                            1
     _A_IRCON                       1
     U0BAUD                         1
     U0GCR                          1
     CLKCONCMD                      1
     T3CTL                          1
     T1CCTL2                        1
     _A_IRCON2                      1
     PERCFG                         1
     P0SEL                          1
     P0DIR                          1
     P2DIR                          1
     PM_data                        6
     i                              1
     count                          4
     countsum                       4
     count_aver                     4
     T3init                        14
     ?Subroutine1                   5
     InitClock                     15
     InitUART                      29
     Init_capture_Gpio             15
     T1_init3                      13
     T1_Capture_r_f_init           10
     ?Subroutine0                   7
     PM2_5Init                     30
     T1_ISR                       244
     ?Subroutine2                   5
     T3_ISR                        42
     ??T1_ISR??INTVEC 75            3
     ??T3_ISR??INTVEC 91            3
     ??T3init?relay                 6
     ??InitClock?relay              6
     ??InitUART?relay               6
     ??Init_capture_Gpio?relay      6
     ??T1_init3?relay               6
     ??T1_Capture_r_f_init?relay    6
     ??PM2_5Init?relay              6
     ?<Constant "%.2f">             5
     __Constant_0                   4
     __Constant_4003126f            4
     __Constant_c0000000            4
     __Constant_40a00000            4
     __Constant_3f800000            4

 
 138 bytes in segment BANKED_CODE
  42 bytes in segment BANK_RELAYS
   6 bytes in segment INTVEC
 291 bytes in segment NEAR_CODE
  20 bytes in segment SFR_AN
  25 bytes in segment XDATA_ROM_C
  19 bytes in segment XDATA_Z
 
 471 bytes of CODE  memory (+  6 bytes shared)
   5 bytes of CONST memory (+ 20 bytes shared)
   0 bytes of DATA  memory (+ 20 bytes shared)
  19 bytes of XDATA memory

Errors: none
Warnings: 1
